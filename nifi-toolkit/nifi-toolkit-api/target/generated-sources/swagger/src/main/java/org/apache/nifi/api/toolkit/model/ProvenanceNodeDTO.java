/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * The nodes in the lineage.
 */
@Schema(description = "The nodes in the lineage.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class ProvenanceNodeDTO {
  @JsonProperty("childUuids")
  private List<String> childUuids = null;

  @JsonProperty("clusterNodeIdentifier")
  private String clusterNodeIdentifier = null;

  @JsonProperty("eventType")
  private String eventType = null;

  @JsonProperty("flowFileUuid")
  private String flowFileUuid = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("millis")
  private Long millis = null;

  @JsonProperty("parentUuids")
  private List<String> parentUuids = null;

  @JsonProperty("timestamp")
  private String timestamp = null;

  /**
   * The type of the node.
   */
  public enum TypeEnum {
    FLOWFILE("FLOWFILE"),
    EVENT("EVENT");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  public ProvenanceNodeDTO childUuids(List<String> childUuids) {
    this.childUuids = childUuids;
    return this;
  }

  public ProvenanceNodeDTO addChildUuidsItem(String childUuidsItem) {
    if (this.childUuids == null) {
      this.childUuids = new ArrayList<>();
    }
    this.childUuids.add(childUuidsItem);
    return this;
  }

   /**
   * The uuid of the childrent flowfiles of the provenance event.
   * @return childUuids
  **/
  @Schema(description = "The uuid of the childrent flowfiles of the provenance event.")
  public List<String> getChildUuids() {
    return childUuids;
  }

  public void setChildUuids(List<String> childUuids) {
    this.childUuids = childUuids;
  }

  public ProvenanceNodeDTO clusterNodeIdentifier(String clusterNodeIdentifier) {
    this.clusterNodeIdentifier = clusterNodeIdentifier;
    return this;
  }

   /**
   * The identifier of the node that this event/flowfile originated from.
   * @return clusterNodeIdentifier
  **/
  @Schema(description = "The identifier of the node that this event/flowfile originated from.")
  public String getClusterNodeIdentifier() {
    return clusterNodeIdentifier;
  }

  public void setClusterNodeIdentifier(String clusterNodeIdentifier) {
    this.clusterNodeIdentifier = clusterNodeIdentifier;
  }

  public ProvenanceNodeDTO eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * If the type is EVENT, this is the type of event.
   * @return eventType
  **/
  @Schema(description = "If the type is EVENT, this is the type of event.")
  public String getEventType() {
    return eventType;
  }

  public void setEventType(String eventType) {
    this.eventType = eventType;
  }

  public ProvenanceNodeDTO flowFileUuid(String flowFileUuid) {
    this.flowFileUuid = flowFileUuid;
    return this;
  }

   /**
   * The uuid of the flowfile associated with the provenance event.
   * @return flowFileUuid
  **/
  @Schema(description = "The uuid of the flowfile associated with the provenance event.")
  public String getFlowFileUuid() {
    return flowFileUuid;
  }

  public void setFlowFileUuid(String flowFileUuid) {
    this.flowFileUuid = flowFileUuid;
  }

  public ProvenanceNodeDTO id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the node.
   * @return id
  **/
  @Schema(description = "The id of the node.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProvenanceNodeDTO millis(Long millis) {
    this.millis = millis;
    return this;
  }

   /**
   * The timestamp of the node in milliseconds.
   * @return millis
  **/
  @Schema(description = "The timestamp of the node in milliseconds.")
  public Long getMillis() {
    return millis;
  }

  public void setMillis(Long millis) {
    this.millis = millis;
  }

  public ProvenanceNodeDTO parentUuids(List<String> parentUuids) {
    this.parentUuids = parentUuids;
    return this;
  }

  public ProvenanceNodeDTO addParentUuidsItem(String parentUuidsItem) {
    if (this.parentUuids == null) {
      this.parentUuids = new ArrayList<>();
    }
    this.parentUuids.add(parentUuidsItem);
    return this;
  }

   /**
   * The uuid of the parent flowfiles of the provenance event.
   * @return parentUuids
  **/
  @Schema(description = "The uuid of the parent flowfiles of the provenance event.")
  public List<String> getParentUuids() {
    return parentUuids;
  }

  public void setParentUuids(List<String> parentUuids) {
    this.parentUuids = parentUuids;
  }

  public ProvenanceNodeDTO timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The timestamp of the node formatted.
   * @return timestamp
  **/
  @Schema(description = "The timestamp of the node formatted.")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  public ProvenanceNodeDTO type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the node.
   * @return type
  **/
  @Schema(description = "The type of the node.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProvenanceNodeDTO provenanceNodeDTO = (ProvenanceNodeDTO) o;
    return Objects.equals(this.childUuids, provenanceNodeDTO.childUuids) &&
        Objects.equals(this.clusterNodeIdentifier, provenanceNodeDTO.clusterNodeIdentifier) &&
        Objects.equals(this.eventType, provenanceNodeDTO.eventType) &&
        Objects.equals(this.flowFileUuid, provenanceNodeDTO.flowFileUuid) &&
        Objects.equals(this.id, provenanceNodeDTO.id) &&
        Objects.equals(this.millis, provenanceNodeDTO.millis) &&
        Objects.equals(this.parentUuids, provenanceNodeDTO.parentUuids) &&
        Objects.equals(this.timestamp, provenanceNodeDTO.timestamp) &&
        Objects.equals(this.type, provenanceNodeDTO.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(childUuids, clusterNodeIdentifier, eventType, flowFileUuid, id, millis, parentUuids, timestamp, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProvenanceNodeDTO {\n");
    
    sb.append("    childUuids: ").append(toIndentedString(childUuids)).append("\n");
    sb.append("    clusterNodeIdentifier: ").append(toIndentedString(clusterNodeIdentifier)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    flowFileUuid: ").append(toIndentedString(flowFileUuid)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    millis: ").append(toIndentedString(millis)).append("\n");
    sb.append("    parentUuids: ").append(toIndentedString(parentUuids)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
