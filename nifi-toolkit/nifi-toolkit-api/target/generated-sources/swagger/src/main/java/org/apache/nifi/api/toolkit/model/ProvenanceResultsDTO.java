/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.apache.nifi.api.toolkit.model.ProvenanceEventDTO;
/**
 * The provenance results.
 */
@Schema(description = "The provenance results.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class ProvenanceResultsDTO {
  @JsonProperty("errors")
  private List<String> errors = null;

  @JsonProperty("generated")
  private String generated = null;

  @JsonProperty("oldestEvent")
  private String oldestEvent = null;

  @JsonProperty("provenanceEvents")
  private List<ProvenanceEventDTO> provenanceEvents = null;

  @JsonProperty("timeOffset")
  private Integer timeOffset = null;

  @JsonProperty("total")
  private String total = null;

  @JsonProperty("totalCount")
  private Long totalCount = null;

  public ProvenanceResultsDTO errors(List<String> errors) {
    this.errors = errors;
    return this;
  }

  public ProvenanceResultsDTO addErrorsItem(String errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Any errors that occurred while performing the provenance request.
   * @return errors
  **/
  @Schema(description = "Any errors that occurred while performing the provenance request.")
  public List<String> getErrors() {
    return errors;
  }

  public void setErrors(List<String> errors) {
    this.errors = errors;
  }

  public ProvenanceResultsDTO generated(String generated) {
    this.generated = generated;
    return this;
  }

   /**
   * Then the search was performed.
   * @return generated
  **/
  @Schema(description = "Then the search was performed.")
  public String getGenerated() {
    return generated;
  }

  public void setGenerated(String generated) {
    this.generated = generated;
  }

  public ProvenanceResultsDTO oldestEvent(String oldestEvent) {
    this.oldestEvent = oldestEvent;
    return this;
  }

   /**
   * The oldest event available in the provenance repository.
   * @return oldestEvent
  **/
  @Schema(description = "The oldest event available in the provenance repository.")
  public String getOldestEvent() {
    return oldestEvent;
  }

  public void setOldestEvent(String oldestEvent) {
    this.oldestEvent = oldestEvent;
  }

  public ProvenanceResultsDTO provenanceEvents(List<ProvenanceEventDTO> provenanceEvents) {
    this.provenanceEvents = provenanceEvents;
    return this;
  }

  public ProvenanceResultsDTO addProvenanceEventsItem(ProvenanceEventDTO provenanceEventsItem) {
    if (this.provenanceEvents == null) {
      this.provenanceEvents = new ArrayList<>();
    }
    this.provenanceEvents.add(provenanceEventsItem);
    return this;
  }

   /**
   * The provenance events that matched the search criteria.
   * @return provenanceEvents
  **/
  @Schema(description = "The provenance events that matched the search criteria.")
  public List<ProvenanceEventDTO> getProvenanceEvents() {
    return provenanceEvents;
  }

  public void setProvenanceEvents(List<ProvenanceEventDTO> provenanceEvents) {
    this.provenanceEvents = provenanceEvents;
  }

  public ProvenanceResultsDTO timeOffset(Integer timeOffset) {
    this.timeOffset = timeOffset;
    return this;
  }

   /**
   * The time offset of the server that&#x27;s used for event time.
   * @return timeOffset
  **/
  @Schema(description = "The time offset of the server that's used for event time.")
  public Integer getTimeOffset() {
    return timeOffset;
  }

  public void setTimeOffset(Integer timeOffset) {
    this.timeOffset = timeOffset;
  }

  public ProvenanceResultsDTO total(String total) {
    this.total = total;
    return this;
  }

   /**
   * The total number of results formatted.
   * @return total
  **/
  @Schema(description = "The total number of results formatted.")
  public String getTotal() {
    return total;
  }

  public void setTotal(String total) {
    this.total = total;
  }

  public ProvenanceResultsDTO totalCount(Long totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * The total number of results.
   * @return totalCount
  **/
  @Schema(description = "The total number of results.")
  public Long getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Long totalCount) {
    this.totalCount = totalCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProvenanceResultsDTO provenanceResultsDTO = (ProvenanceResultsDTO) o;
    return Objects.equals(this.errors, provenanceResultsDTO.errors) &&
        Objects.equals(this.generated, provenanceResultsDTO.generated) &&
        Objects.equals(this.oldestEvent, provenanceResultsDTO.oldestEvent) &&
        Objects.equals(this.provenanceEvents, provenanceResultsDTO.provenanceEvents) &&
        Objects.equals(this.timeOffset, provenanceResultsDTO.timeOffset) &&
        Objects.equals(this.total, provenanceResultsDTO.total) &&
        Objects.equals(this.totalCount, provenanceResultsDTO.totalCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errors, generated, oldestEvent, provenanceEvents, timeOffset, total, totalCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProvenanceResultsDTO {\n");
    
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    generated: ").append(toIndentedString(generated)).append("\n");
    sb.append("    oldestEvent: ").append(toIndentedString(oldestEvent)).append("\n");
    sb.append("    provenanceEvents: ").append(toIndentedString(provenanceEvents)).append("\n");
    sb.append("    timeOffset: ").append(toIndentedString(timeOffset)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
