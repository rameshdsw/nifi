/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.apache.nifi.api.toolkit.model.RemoteProcessGroupStatusSnapshotDTO;
/**
 * The status of all remote process groups in the process group.
 */
@Schema(description = "The status of all remote process groups in the process group.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class RemoteProcessGroupStatusSnapshotEntity {
  @JsonProperty("canRead")
  private Boolean canRead = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("remoteProcessGroupStatusSnapshot")
  private RemoteProcessGroupStatusSnapshotDTO remoteProcessGroupStatusSnapshot = null;

   /**
   * Indicates whether the user can read a given resource.
   * @return canRead
  **/
  @Schema(description = "Indicates whether the user can read a given resource.")
  public Boolean isCanRead() {
    return canRead;
  }

  public RemoteProcessGroupStatusSnapshotEntity id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the remote process group.
   * @return id
  **/
  @Schema(description = "The id of the remote process group.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public RemoteProcessGroupStatusSnapshotEntity remoteProcessGroupStatusSnapshot(RemoteProcessGroupStatusSnapshotDTO remoteProcessGroupStatusSnapshot) {
    this.remoteProcessGroupStatusSnapshot = remoteProcessGroupStatusSnapshot;
    return this;
  }

   /**
   * Get remoteProcessGroupStatusSnapshot
   * @return remoteProcessGroupStatusSnapshot
  **/
  @Schema(description = "")
  public RemoteProcessGroupStatusSnapshotDTO getRemoteProcessGroupStatusSnapshot() {
    return remoteProcessGroupStatusSnapshot;
  }

  public void setRemoteProcessGroupStatusSnapshot(RemoteProcessGroupStatusSnapshotDTO remoteProcessGroupStatusSnapshot) {
    this.remoteProcessGroupStatusSnapshot = remoteProcessGroupStatusSnapshot;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteProcessGroupStatusSnapshotEntity remoteProcessGroupStatusSnapshotEntity = (RemoteProcessGroupStatusSnapshotEntity) o;
    return Objects.equals(this.canRead, remoteProcessGroupStatusSnapshotEntity.canRead) &&
        Objects.equals(this.id, remoteProcessGroupStatusSnapshotEntity.id) &&
        Objects.equals(this.remoteProcessGroupStatusSnapshot, remoteProcessGroupStatusSnapshotEntity.remoteProcessGroupStatusSnapshot);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canRead, id, remoteProcessGroupStatusSnapshot);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteProcessGroupStatusSnapshotEntity {\n");
    
    sb.append("    canRead: ").append(toIndentedString(canRead)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    remoteProcessGroupStatusSnapshot: ").append(toIndentedString(remoteProcessGroupStatusSnapshot)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
