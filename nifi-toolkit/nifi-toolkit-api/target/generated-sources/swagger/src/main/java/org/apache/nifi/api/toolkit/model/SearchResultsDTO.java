/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.apache.nifi.api.toolkit.model.ComponentSearchResultDTO;
/**
 * SearchResultsDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class SearchResultsDTO {
  @JsonProperty("connectionResults")
  private List<ComponentSearchResultDTO> connectionResults = null;

  @JsonProperty("controllerServiceNodeResults")
  private List<ComponentSearchResultDTO> controllerServiceNodeResults = null;

  @JsonProperty("funnelResults")
  private List<ComponentSearchResultDTO> funnelResults = null;

  @JsonProperty("inputPortResults")
  private List<ComponentSearchResultDTO> inputPortResults = null;

  @JsonProperty("labelResults")
  private List<ComponentSearchResultDTO> labelResults = null;

  @JsonProperty("outputPortResults")
  private List<ComponentSearchResultDTO> outputPortResults = null;

  @JsonProperty("parameterContextResults")
  private List<ComponentSearchResultDTO> parameterContextResults = null;

  @JsonProperty("parameterProviderNodeResults")
  private List<ComponentSearchResultDTO> parameterProviderNodeResults = null;

  @JsonProperty("parameterResults")
  private List<ComponentSearchResultDTO> parameterResults = null;

  @JsonProperty("processGroupResults")
  private List<ComponentSearchResultDTO> processGroupResults = null;

  @JsonProperty("processorResults")
  private List<ComponentSearchResultDTO> processorResults = null;

  @JsonProperty("remoteProcessGroupResults")
  private List<ComponentSearchResultDTO> remoteProcessGroupResults = null;

  public SearchResultsDTO connectionResults(List<ComponentSearchResultDTO> connectionResults) {
    this.connectionResults = connectionResults;
    return this;
  }

  public SearchResultsDTO addConnectionResultsItem(ComponentSearchResultDTO connectionResultsItem) {
    if (this.connectionResults == null) {
      this.connectionResults = new ArrayList<>();
    }
    this.connectionResults.add(connectionResultsItem);
    return this;
  }

   /**
   * The connections that matched the search.
   * @return connectionResults
  **/
  @Schema(description = "The connections that matched the search.")
  public List<ComponentSearchResultDTO> getConnectionResults() {
    return connectionResults;
  }

  public void setConnectionResults(List<ComponentSearchResultDTO> connectionResults) {
    this.connectionResults = connectionResults;
  }

  public SearchResultsDTO controllerServiceNodeResults(List<ComponentSearchResultDTO> controllerServiceNodeResults) {
    this.controllerServiceNodeResults = controllerServiceNodeResults;
    return this;
  }

  public SearchResultsDTO addControllerServiceNodeResultsItem(ComponentSearchResultDTO controllerServiceNodeResultsItem) {
    if (this.controllerServiceNodeResults == null) {
      this.controllerServiceNodeResults = new ArrayList<>();
    }
    this.controllerServiceNodeResults.add(controllerServiceNodeResultsItem);
    return this;
  }

   /**
   * The controller service nodes that matched the search
   * @return controllerServiceNodeResults
  **/
  @Schema(description = "The controller service nodes that matched the search")
  public List<ComponentSearchResultDTO> getControllerServiceNodeResults() {
    return controllerServiceNodeResults;
  }

  public void setControllerServiceNodeResults(List<ComponentSearchResultDTO> controllerServiceNodeResults) {
    this.controllerServiceNodeResults = controllerServiceNodeResults;
  }

  public SearchResultsDTO funnelResults(List<ComponentSearchResultDTO> funnelResults) {
    this.funnelResults = funnelResults;
    return this;
  }

  public SearchResultsDTO addFunnelResultsItem(ComponentSearchResultDTO funnelResultsItem) {
    if (this.funnelResults == null) {
      this.funnelResults = new ArrayList<>();
    }
    this.funnelResults.add(funnelResultsItem);
    return this;
  }

   /**
   * The funnels that matched the search.
   * @return funnelResults
  **/
  @Schema(description = "The funnels that matched the search.")
  public List<ComponentSearchResultDTO> getFunnelResults() {
    return funnelResults;
  }

  public void setFunnelResults(List<ComponentSearchResultDTO> funnelResults) {
    this.funnelResults = funnelResults;
  }

  public SearchResultsDTO inputPortResults(List<ComponentSearchResultDTO> inputPortResults) {
    this.inputPortResults = inputPortResults;
    return this;
  }

  public SearchResultsDTO addInputPortResultsItem(ComponentSearchResultDTO inputPortResultsItem) {
    if (this.inputPortResults == null) {
      this.inputPortResults = new ArrayList<>();
    }
    this.inputPortResults.add(inputPortResultsItem);
    return this;
  }

   /**
   * The input ports that matched the search.
   * @return inputPortResults
  **/
  @Schema(description = "The input ports that matched the search.")
  public List<ComponentSearchResultDTO> getInputPortResults() {
    return inputPortResults;
  }

  public void setInputPortResults(List<ComponentSearchResultDTO> inputPortResults) {
    this.inputPortResults = inputPortResults;
  }

  public SearchResultsDTO labelResults(List<ComponentSearchResultDTO> labelResults) {
    this.labelResults = labelResults;
    return this;
  }

  public SearchResultsDTO addLabelResultsItem(ComponentSearchResultDTO labelResultsItem) {
    if (this.labelResults == null) {
      this.labelResults = new ArrayList<>();
    }
    this.labelResults.add(labelResultsItem);
    return this;
  }

   /**
   * The labels that matched the search.
   * @return labelResults
  **/
  @Schema(description = "The labels that matched the search.")
  public List<ComponentSearchResultDTO> getLabelResults() {
    return labelResults;
  }

  public void setLabelResults(List<ComponentSearchResultDTO> labelResults) {
    this.labelResults = labelResults;
  }

  public SearchResultsDTO outputPortResults(List<ComponentSearchResultDTO> outputPortResults) {
    this.outputPortResults = outputPortResults;
    return this;
  }

  public SearchResultsDTO addOutputPortResultsItem(ComponentSearchResultDTO outputPortResultsItem) {
    if (this.outputPortResults == null) {
      this.outputPortResults = new ArrayList<>();
    }
    this.outputPortResults.add(outputPortResultsItem);
    return this;
  }

   /**
   * The output ports that matched the search.
   * @return outputPortResults
  **/
  @Schema(description = "The output ports that matched the search.")
  public List<ComponentSearchResultDTO> getOutputPortResults() {
    return outputPortResults;
  }

  public void setOutputPortResults(List<ComponentSearchResultDTO> outputPortResults) {
    this.outputPortResults = outputPortResults;
  }

  public SearchResultsDTO parameterContextResults(List<ComponentSearchResultDTO> parameterContextResults) {
    this.parameterContextResults = parameterContextResults;
    return this;
  }

  public SearchResultsDTO addParameterContextResultsItem(ComponentSearchResultDTO parameterContextResultsItem) {
    if (this.parameterContextResults == null) {
      this.parameterContextResults = new ArrayList<>();
    }
    this.parameterContextResults.add(parameterContextResultsItem);
    return this;
  }

   /**
   * The parameter contexts that matched the search.
   * @return parameterContextResults
  **/
  @Schema(description = "The parameter contexts that matched the search.")
  public List<ComponentSearchResultDTO> getParameterContextResults() {
    return parameterContextResults;
  }

  public void setParameterContextResults(List<ComponentSearchResultDTO> parameterContextResults) {
    this.parameterContextResults = parameterContextResults;
  }

  public SearchResultsDTO parameterProviderNodeResults(List<ComponentSearchResultDTO> parameterProviderNodeResults) {
    this.parameterProviderNodeResults = parameterProviderNodeResults;
    return this;
  }

  public SearchResultsDTO addParameterProviderNodeResultsItem(ComponentSearchResultDTO parameterProviderNodeResultsItem) {
    if (this.parameterProviderNodeResults == null) {
      this.parameterProviderNodeResults = new ArrayList<>();
    }
    this.parameterProviderNodeResults.add(parameterProviderNodeResultsItem);
    return this;
  }

   /**
   * The parameter provider nodes that matched the search
   * @return parameterProviderNodeResults
  **/
  @Schema(description = "The parameter provider nodes that matched the search")
  public List<ComponentSearchResultDTO> getParameterProviderNodeResults() {
    return parameterProviderNodeResults;
  }

  public void setParameterProviderNodeResults(List<ComponentSearchResultDTO> parameterProviderNodeResults) {
    this.parameterProviderNodeResults = parameterProviderNodeResults;
  }

  public SearchResultsDTO parameterResults(List<ComponentSearchResultDTO> parameterResults) {
    this.parameterResults = parameterResults;
    return this;
  }

  public SearchResultsDTO addParameterResultsItem(ComponentSearchResultDTO parameterResultsItem) {
    if (this.parameterResults == null) {
      this.parameterResults = new ArrayList<>();
    }
    this.parameterResults.add(parameterResultsItem);
    return this;
  }

   /**
   * The parameters that matched the search.
   * @return parameterResults
  **/
  @Schema(description = "The parameters that matched the search.")
  public List<ComponentSearchResultDTO> getParameterResults() {
    return parameterResults;
  }

  public void setParameterResults(List<ComponentSearchResultDTO> parameterResults) {
    this.parameterResults = parameterResults;
  }

  public SearchResultsDTO processGroupResults(List<ComponentSearchResultDTO> processGroupResults) {
    this.processGroupResults = processGroupResults;
    return this;
  }

  public SearchResultsDTO addProcessGroupResultsItem(ComponentSearchResultDTO processGroupResultsItem) {
    if (this.processGroupResults == null) {
      this.processGroupResults = new ArrayList<>();
    }
    this.processGroupResults.add(processGroupResultsItem);
    return this;
  }

   /**
   * The process groups that matched the search.
   * @return processGroupResults
  **/
  @Schema(description = "The process groups that matched the search.")
  public List<ComponentSearchResultDTO> getProcessGroupResults() {
    return processGroupResults;
  }

  public void setProcessGroupResults(List<ComponentSearchResultDTO> processGroupResults) {
    this.processGroupResults = processGroupResults;
  }

  public SearchResultsDTO processorResults(List<ComponentSearchResultDTO> processorResults) {
    this.processorResults = processorResults;
    return this;
  }

  public SearchResultsDTO addProcessorResultsItem(ComponentSearchResultDTO processorResultsItem) {
    if (this.processorResults == null) {
      this.processorResults = new ArrayList<>();
    }
    this.processorResults.add(processorResultsItem);
    return this;
  }

   /**
   * The processors that matched the search.
   * @return processorResults
  **/
  @Schema(description = "The processors that matched the search.")
  public List<ComponentSearchResultDTO> getProcessorResults() {
    return processorResults;
  }

  public void setProcessorResults(List<ComponentSearchResultDTO> processorResults) {
    this.processorResults = processorResults;
  }

  public SearchResultsDTO remoteProcessGroupResults(List<ComponentSearchResultDTO> remoteProcessGroupResults) {
    this.remoteProcessGroupResults = remoteProcessGroupResults;
    return this;
  }

  public SearchResultsDTO addRemoteProcessGroupResultsItem(ComponentSearchResultDTO remoteProcessGroupResultsItem) {
    if (this.remoteProcessGroupResults == null) {
      this.remoteProcessGroupResults = new ArrayList<>();
    }
    this.remoteProcessGroupResults.add(remoteProcessGroupResultsItem);
    return this;
  }

   /**
   * The remote process groups that matched the search.
   * @return remoteProcessGroupResults
  **/
  @Schema(description = "The remote process groups that matched the search.")
  public List<ComponentSearchResultDTO> getRemoteProcessGroupResults() {
    return remoteProcessGroupResults;
  }

  public void setRemoteProcessGroupResults(List<ComponentSearchResultDTO> remoteProcessGroupResults) {
    this.remoteProcessGroupResults = remoteProcessGroupResults;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchResultsDTO searchResultsDTO = (SearchResultsDTO) o;
    return Objects.equals(this.connectionResults, searchResultsDTO.connectionResults) &&
        Objects.equals(this.controllerServiceNodeResults, searchResultsDTO.controllerServiceNodeResults) &&
        Objects.equals(this.funnelResults, searchResultsDTO.funnelResults) &&
        Objects.equals(this.inputPortResults, searchResultsDTO.inputPortResults) &&
        Objects.equals(this.labelResults, searchResultsDTO.labelResults) &&
        Objects.equals(this.outputPortResults, searchResultsDTO.outputPortResults) &&
        Objects.equals(this.parameterContextResults, searchResultsDTO.parameterContextResults) &&
        Objects.equals(this.parameterProviderNodeResults, searchResultsDTO.parameterProviderNodeResults) &&
        Objects.equals(this.parameterResults, searchResultsDTO.parameterResults) &&
        Objects.equals(this.processGroupResults, searchResultsDTO.processGroupResults) &&
        Objects.equals(this.processorResults, searchResultsDTO.processorResults) &&
        Objects.equals(this.remoteProcessGroupResults, searchResultsDTO.remoteProcessGroupResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionResults, controllerServiceNodeResults, funnelResults, inputPortResults, labelResults, outputPortResults, parameterContextResults, parameterProviderNodeResults, parameterResults, processGroupResults, processorResults, remoteProcessGroupResults);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchResultsDTO {\n");
    
    sb.append("    connectionResults: ").append(toIndentedString(connectionResults)).append("\n");
    sb.append("    controllerServiceNodeResults: ").append(toIndentedString(controllerServiceNodeResults)).append("\n");
    sb.append("    funnelResults: ").append(toIndentedString(funnelResults)).append("\n");
    sb.append("    inputPortResults: ").append(toIndentedString(inputPortResults)).append("\n");
    sb.append("    labelResults: ").append(toIndentedString(labelResults)).append("\n");
    sb.append("    outputPortResults: ").append(toIndentedString(outputPortResults)).append("\n");
    sb.append("    parameterContextResults: ").append(toIndentedString(parameterContextResults)).append("\n");
    sb.append("    parameterProviderNodeResults: ").append(toIndentedString(parameterProviderNodeResults)).append("\n");
    sb.append("    parameterResults: ").append(toIndentedString(parameterResults)).append("\n");
    sb.append("    processGroupResults: ").append(toIndentedString(processGroupResults)).append("\n");
    sb.append("    processorResults: ").append(toIndentedString(processorResults)).append("\n");
    sb.append("    remoteProcessGroupResults: ").append(toIndentedString(remoteProcessGroupResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
