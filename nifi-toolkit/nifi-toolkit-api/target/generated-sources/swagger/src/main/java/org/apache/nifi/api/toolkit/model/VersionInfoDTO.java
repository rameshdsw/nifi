/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
/**
 * The nifi, os, java, and build version information
 */
@Schema(description = "The nifi, os, java, and build version information")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class VersionInfoDTO {
  @JsonProperty("buildBranch")
  private String buildBranch = null;

  @JsonProperty("buildRevision")
  private String buildRevision = null;

  @JsonProperty("buildTag")
  private String buildTag = null;

  @JsonProperty("buildTimestamp")
  private OffsetDateTime buildTimestamp = null;

  @JsonProperty("javaVendor")
  private String javaVendor = null;

  @JsonProperty("javaVersion")
  private String javaVersion = null;

  @JsonProperty("niFiVersion")
  private String niFiVersion = null;

  @JsonProperty("osArchitecture")
  private String osArchitecture = null;

  @JsonProperty("osName")
  private String osName = null;

  @JsonProperty("osVersion")
  private String osVersion = null;

  public VersionInfoDTO buildBranch(String buildBranch) {
    this.buildBranch = buildBranch;
    return this;
  }

   /**
   * Build branch
   * @return buildBranch
  **/
  @Schema(description = "Build branch")
  public String getBuildBranch() {
    return buildBranch;
  }

  public void setBuildBranch(String buildBranch) {
    this.buildBranch = buildBranch;
  }

  public VersionInfoDTO buildRevision(String buildRevision) {
    this.buildRevision = buildRevision;
    return this;
  }

   /**
   * Build revision or commit hash
   * @return buildRevision
  **/
  @Schema(description = "Build revision or commit hash")
  public String getBuildRevision() {
    return buildRevision;
  }

  public void setBuildRevision(String buildRevision) {
    this.buildRevision = buildRevision;
  }

  public VersionInfoDTO buildTag(String buildTag) {
    this.buildTag = buildTag;
    return this;
  }

   /**
   * Build tag
   * @return buildTag
  **/
  @Schema(description = "Build tag")
  public String getBuildTag() {
    return buildTag;
  }

  public void setBuildTag(String buildTag) {
    this.buildTag = buildTag;
  }

  public VersionInfoDTO buildTimestamp(OffsetDateTime buildTimestamp) {
    this.buildTimestamp = buildTimestamp;
    return this;
  }

   /**
   * Build timestamp
   * @return buildTimestamp
  **/
  @Schema(description = "Build timestamp")
  public OffsetDateTime getBuildTimestamp() {
    return buildTimestamp;
  }

  public void setBuildTimestamp(OffsetDateTime buildTimestamp) {
    this.buildTimestamp = buildTimestamp;
  }

  public VersionInfoDTO javaVendor(String javaVendor) {
    this.javaVendor = javaVendor;
    return this;
  }

   /**
   * Java JVM vendor
   * @return javaVendor
  **/
  @Schema(description = "Java JVM vendor")
  public String getJavaVendor() {
    return javaVendor;
  }

  public void setJavaVendor(String javaVendor) {
    this.javaVendor = javaVendor;
  }

  public VersionInfoDTO javaVersion(String javaVersion) {
    this.javaVersion = javaVersion;
    return this;
  }

   /**
   * Java version
   * @return javaVersion
  **/
  @Schema(description = "Java version")
  public String getJavaVersion() {
    return javaVersion;
  }

  public void setJavaVersion(String javaVersion) {
    this.javaVersion = javaVersion;
  }

  public VersionInfoDTO niFiVersion(String niFiVersion) {
    this.niFiVersion = niFiVersion;
    return this;
  }

   /**
   * The version of this NiFi.
   * @return niFiVersion
  **/
  @Schema(description = "The version of this NiFi.")
  public String getNiFiVersion() {
    return niFiVersion;
  }

  public void setNiFiVersion(String niFiVersion) {
    this.niFiVersion = niFiVersion;
  }

  public VersionInfoDTO osArchitecture(String osArchitecture) {
    this.osArchitecture = osArchitecture;
    return this;
  }

   /**
   * Host operating system architecture
   * @return osArchitecture
  **/
  @Schema(description = "Host operating system architecture")
  public String getOsArchitecture() {
    return osArchitecture;
  }

  public void setOsArchitecture(String osArchitecture) {
    this.osArchitecture = osArchitecture;
  }

  public VersionInfoDTO osName(String osName) {
    this.osName = osName;
    return this;
  }

   /**
   * Host operating system name
   * @return osName
  **/
  @Schema(description = "Host operating system name")
  public String getOsName() {
    return osName;
  }

  public void setOsName(String osName) {
    this.osName = osName;
  }

  public VersionInfoDTO osVersion(String osVersion) {
    this.osVersion = osVersion;
    return this;
  }

   /**
   * Host operating system version
   * @return osVersion
  **/
  @Schema(description = "Host operating system version")
  public String getOsVersion() {
    return osVersion;
  }

  public void setOsVersion(String osVersion) {
    this.osVersion = osVersion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionInfoDTO versionInfoDTO = (VersionInfoDTO) o;
    return Objects.equals(this.buildBranch, versionInfoDTO.buildBranch) &&
        Objects.equals(this.buildRevision, versionInfoDTO.buildRevision) &&
        Objects.equals(this.buildTag, versionInfoDTO.buildTag) &&
        Objects.equals(this.buildTimestamp, versionInfoDTO.buildTimestamp) &&
        Objects.equals(this.javaVendor, versionInfoDTO.javaVendor) &&
        Objects.equals(this.javaVersion, versionInfoDTO.javaVersion) &&
        Objects.equals(this.niFiVersion, versionInfoDTO.niFiVersion) &&
        Objects.equals(this.osArchitecture, versionInfoDTO.osArchitecture) &&
        Objects.equals(this.osName, versionInfoDTO.osName) &&
        Objects.equals(this.osVersion, versionInfoDTO.osVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buildBranch, buildRevision, buildTag, buildTimestamp, javaVendor, javaVersion, niFiVersion, osArchitecture, osName, osVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionInfoDTO {\n");
    
    sb.append("    buildBranch: ").append(toIndentedString(buildBranch)).append("\n");
    sb.append("    buildRevision: ").append(toIndentedString(buildRevision)).append("\n");
    sb.append("    buildTag: ").append(toIndentedString(buildTag)).append("\n");
    sb.append("    buildTimestamp: ").append(toIndentedString(buildTimestamp)).append("\n");
    sb.append("    javaVendor: ").append(toIndentedString(javaVendor)).append("\n");
    sb.append("    javaVersion: ").append(toIndentedString(javaVersion)).append("\n");
    sb.append("    niFiVersion: ").append(toIndentedString(niFiVersion)).append("\n");
    sb.append("    osArchitecture: ").append(toIndentedString(osArchitecture)).append("\n");
    sb.append("    osName: ").append(toIndentedString(osName)).append("\n");
    sb.append("    osVersion: ").append(toIndentedString(osVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
