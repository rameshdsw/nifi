/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.apache.nifi.api.toolkit.model.NarCoordinateDTO;
/**
 * The NAR summary
 */
@Schema(description = "The NAR summary")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class NarSummaryDTO {
  @JsonProperty("buildTime")
  private String buildTime = null;

  @JsonProperty("coordinate")
  private NarCoordinateDTO coordinate = null;

  @JsonProperty("createdBy")
  private String createdBy = null;

  @JsonProperty("dependencyCoordinate")
  private NarCoordinateDTO dependencyCoordinate = null;

  @JsonProperty("digest")
  private String digest = null;

  @JsonProperty("extensionCount")
  private Integer extensionCount = null;

  @JsonProperty("failureMessage")
  private String failureMessage = null;

  @JsonProperty("identifier")
  private String identifier = null;

  @JsonProperty("installComplete")
  private Boolean installComplete = null;

  @JsonProperty("sourceIdentifier")
  private String sourceIdentifier = null;

  @JsonProperty("sourceType")
  private String sourceType = null;

  @JsonProperty("state")
  private String state = null;

  public NarSummaryDTO buildTime(String buildTime) {
    this.buildTime = buildTime;
    return this;
  }

   /**
   * The time the NAR was built according to it&#x27;s MANIFEST
   * @return buildTime
  **/
  @Schema(description = "The time the NAR was built according to it's MANIFEST")
  public String getBuildTime() {
    return buildTime;
  }

  public void setBuildTime(String buildTime) {
    this.buildTime = buildTime;
  }

  public NarSummaryDTO coordinate(NarCoordinateDTO coordinate) {
    this.coordinate = coordinate;
    return this;
  }

   /**
   * Get coordinate
   * @return coordinate
  **/
  @Schema(description = "")
  public NarCoordinateDTO getCoordinate() {
    return coordinate;
  }

  public void setCoordinate(NarCoordinateDTO coordinate) {
    this.coordinate = coordinate;
  }

  public NarSummaryDTO createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * The plugin that created the NAR according to it&#x27;s MANIFEST
   * @return createdBy
  **/
  @Schema(description = "The plugin that created the NAR according to it's MANIFEST")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public NarSummaryDTO dependencyCoordinate(NarCoordinateDTO dependencyCoordinate) {
    this.dependencyCoordinate = dependencyCoordinate;
    return this;
  }

   /**
   * Get dependencyCoordinate
   * @return dependencyCoordinate
  **/
  @Schema(description = "")
  public NarCoordinateDTO getDependencyCoordinate() {
    return dependencyCoordinate;
  }

  public void setDependencyCoordinate(NarCoordinateDTO dependencyCoordinate) {
    this.dependencyCoordinate = dependencyCoordinate;
  }

  public NarSummaryDTO digest(String digest) {
    this.digest = digest;
    return this;
  }

   /**
   * The hex digest of the NAR contents
   * @return digest
  **/
  @Schema(description = "The hex digest of the NAR contents")
  public String getDigest() {
    return digest;
  }

  public void setDigest(String digest) {
    this.digest = digest;
  }

  public NarSummaryDTO extensionCount(Integer extensionCount) {
    this.extensionCount = extensionCount;
    return this;
  }

   /**
   * The number of extensions contained in this NAR
   * @return extensionCount
  **/
  @Schema(description = "The number of extensions contained in this NAR")
  public Integer getExtensionCount() {
    return extensionCount;
  }

  public void setExtensionCount(Integer extensionCount) {
    this.extensionCount = extensionCount;
  }

  public NarSummaryDTO failureMessage(String failureMessage) {
    this.failureMessage = failureMessage;
    return this;
  }

   /**
   * Information about why the installation failed, only populated when the state is failed
   * @return failureMessage
  **/
  @Schema(description = "Information about why the installation failed, only populated when the state is failed")
  public String getFailureMessage() {
    return failureMessage;
  }

  public void setFailureMessage(String failureMessage) {
    this.failureMessage = failureMessage;
  }

  public NarSummaryDTO identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * The identifier of the NAR.
   * @return identifier
  **/
  @Schema(description = "The identifier of the NAR.")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public NarSummaryDTO installComplete(Boolean installComplete) {
    this.installComplete = installComplete;
    return this;
  }

   /**
   * Indicates if the install task has completed
   * @return installComplete
  **/
  @Schema(description = "Indicates if the install task has completed")
  public Boolean isInstallComplete() {
    return installComplete;
  }

  public void setInstallComplete(Boolean installComplete) {
    this.installComplete = installComplete;
  }

  public NarSummaryDTO sourceIdentifier(String sourceIdentifier) {
    this.sourceIdentifier = sourceIdentifier;
    return this;
  }

   /**
   * The identifier of the source of this NAR
   * @return sourceIdentifier
  **/
  @Schema(description = "The identifier of the source of this NAR")
  public String getSourceIdentifier() {
    return sourceIdentifier;
  }

  public void setSourceIdentifier(String sourceIdentifier) {
    this.sourceIdentifier = sourceIdentifier;
  }

  public NarSummaryDTO sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * The source of this NAR
   * @return sourceType
  **/
  @Schema(description = "The source of this NAR")
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }

  public NarSummaryDTO state(String state) {
    this.state = state;
    return this;
  }

   /**
   * The state of the NAR (i.e. Installed, or not)
   * @return state
  **/
  @Schema(description = "The state of the NAR (i.e. Installed, or not)")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NarSummaryDTO narSummaryDTO = (NarSummaryDTO) o;
    return Objects.equals(this.buildTime, narSummaryDTO.buildTime) &&
        Objects.equals(this.coordinate, narSummaryDTO.coordinate) &&
        Objects.equals(this.createdBy, narSummaryDTO.createdBy) &&
        Objects.equals(this.dependencyCoordinate, narSummaryDTO.dependencyCoordinate) &&
        Objects.equals(this.digest, narSummaryDTO.digest) &&
        Objects.equals(this.extensionCount, narSummaryDTO.extensionCount) &&
        Objects.equals(this.failureMessage, narSummaryDTO.failureMessage) &&
        Objects.equals(this.identifier, narSummaryDTO.identifier) &&
        Objects.equals(this.installComplete, narSummaryDTO.installComplete) &&
        Objects.equals(this.sourceIdentifier, narSummaryDTO.sourceIdentifier) &&
        Objects.equals(this.sourceType, narSummaryDTO.sourceType) &&
        Objects.equals(this.state, narSummaryDTO.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buildTime, coordinate, createdBy, dependencyCoordinate, digest, extensionCount, failureMessage, identifier, installComplete, sourceIdentifier, sourceType, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NarSummaryDTO {\n");
    
    sb.append("    buildTime: ").append(toIndentedString(buildTime)).append("\n");
    sb.append("    coordinate: ").append(toIndentedString(coordinate)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    dependencyCoordinate: ").append(toIndentedString(dependencyCoordinate)).append("\n");
    sb.append("    digest: ").append(toIndentedString(digest)).append("\n");
    sb.append("    extensionCount: ").append(toIndentedString(extensionCount)).append("\n");
    sb.append("    failureMessage: ").append(toIndentedString(failureMessage)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    installComplete: ").append(toIndentedString(installComplete)).append("\n");
    sb.append("    sourceIdentifier: ").append(toIndentedString(sourceIdentifier)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
