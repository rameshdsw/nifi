/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * The mime types this Content Viewer supports.
 */
@Schema(description = "The mime types this Content Viewer supports.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class SupportedMimeTypesDTO {
  @JsonProperty("displayName")
  private String displayName = null;

  @JsonProperty("mimeTypes")
  private List<String> mimeTypes = null;

   /**
   * The display name of the mime types.
   * @return displayName
  **/
  @Schema(description = "The display name of the mime types.")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * The mime types this Content Viewer supports.
   * @return mimeTypes
  **/
  @Schema(description = "The mime types this Content Viewer supports.")
  public List<String> getMimeTypes() {
    return mimeTypes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupportedMimeTypesDTO supportedMimeTypesDTO = (SupportedMimeTypesDTO) o;
    return Objects.equals(this.displayName, supportedMimeTypesDTO.displayName) &&
        Objects.equals(this.mimeTypes, supportedMimeTypesDTO.mimeTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, mimeTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupportedMimeTypesDTO {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    mimeTypes: ").append(toIndentedString(mimeTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
