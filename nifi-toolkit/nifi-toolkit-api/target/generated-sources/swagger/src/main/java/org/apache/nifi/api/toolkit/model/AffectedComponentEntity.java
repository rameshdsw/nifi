/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.apache.nifi.api.toolkit.model.AffectedComponentDTO;
import org.apache.nifi.api.toolkit.model.BulletinEntity;
import org.apache.nifi.api.toolkit.model.PermissionsDTO;
import org.apache.nifi.api.toolkit.model.PositionDTO;
import org.apache.nifi.api.toolkit.model.ProcessGroupNameDTO;
import org.apache.nifi.api.toolkit.model.RevisionDTO;
/**
 * The set of all components in the flow that are referencing this Parameter
 */
@Schema(description = "The set of all components in the flow that are referencing this Parameter")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class AffectedComponentEntity {
  @JsonProperty("bulletins")
  private List<BulletinEntity> bulletins = null;

  @JsonProperty("component")
  private AffectedComponentDTO component = null;

  @JsonProperty("disconnectedNodeAcknowledged")
  private Boolean disconnectedNodeAcknowledged = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("permissions")
  private PermissionsDTO permissions = null;

  @JsonProperty("position")
  private PositionDTO position = null;

  @JsonProperty("processGroup")
  private ProcessGroupNameDTO processGroup = null;

  /**
   * The type of component referenced
   */
  public enum ReferenceTypeEnum {
    PROCESSOR("PROCESSOR"),
    CONTROLLER_SERVICE("CONTROLLER_SERVICE"),
    INPUT_PORT("INPUT_PORT"),
    OUTPUT_PORT("OUTPUT_PORT"),
    REMOTE_INPUT_PORT("REMOTE_INPUT_PORT"),
    REMOTE_OUTPUT_PORT("REMOTE_OUTPUT_PORT");

    private String value;

    ReferenceTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ReferenceTypeEnum fromValue(String input) {
      for (ReferenceTypeEnum b : ReferenceTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("referenceType")
  private ReferenceTypeEnum referenceType = null;

  @JsonProperty("revision")
  private RevisionDTO revision = null;

  @JsonProperty("uri")
  private String uri = null;

  public AffectedComponentEntity bulletins(List<BulletinEntity> bulletins) {
    this.bulletins = bulletins;
    return this;
  }

  public AffectedComponentEntity addBulletinsItem(BulletinEntity bulletinsItem) {
    if (this.bulletins == null) {
      this.bulletins = new ArrayList<>();
    }
    this.bulletins.add(bulletinsItem);
    return this;
  }

   /**
   * The bulletins for this component.
   * @return bulletins
  **/
  @Schema(description = "The bulletins for this component.")
  public List<BulletinEntity> getBulletins() {
    return bulletins;
  }

  public void setBulletins(List<BulletinEntity> bulletins) {
    this.bulletins = bulletins;
  }

  public AffectedComponentEntity component(AffectedComponentDTO component) {
    this.component = component;
    return this;
  }

   /**
   * Get component
   * @return component
  **/
  @Schema(description = "")
  public AffectedComponentDTO getComponent() {
    return component;
  }

  public void setComponent(AffectedComponentDTO component) {
    this.component = component;
  }

  public AffectedComponentEntity disconnectedNodeAcknowledged(Boolean disconnectedNodeAcknowledged) {
    this.disconnectedNodeAcknowledged = disconnectedNodeAcknowledged;
    return this;
  }

   /**
   * Acknowledges that this node is disconnected to allow for mutable requests to proceed.
   * @return disconnectedNodeAcknowledged
  **/
  @Schema(description = "Acknowledges that this node is disconnected to allow for mutable requests to proceed.")
  public Boolean isDisconnectedNodeAcknowledged() {
    return disconnectedNodeAcknowledged;
  }

  public void setDisconnectedNodeAcknowledged(Boolean disconnectedNodeAcknowledged) {
    this.disconnectedNodeAcknowledged = disconnectedNodeAcknowledged;
  }

  public AffectedComponentEntity id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the component.
   * @return id
  **/
  @Schema(description = "The id of the component.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AffectedComponentEntity permissions(PermissionsDTO permissions) {
    this.permissions = permissions;
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @Schema(description = "")
  public PermissionsDTO getPermissions() {
    return permissions;
  }

  public void setPermissions(PermissionsDTO permissions) {
    this.permissions = permissions;
  }

  public AffectedComponentEntity position(PositionDTO position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @Schema(description = "")
  public PositionDTO getPosition() {
    return position;
  }

  public void setPosition(PositionDTO position) {
    this.position = position;
  }

  public AffectedComponentEntity processGroup(ProcessGroupNameDTO processGroup) {
    this.processGroup = processGroup;
    return this;
  }

   /**
   * Get processGroup
   * @return processGroup
  **/
  @Schema(description = "")
  public ProcessGroupNameDTO getProcessGroup() {
    return processGroup;
  }

  public void setProcessGroup(ProcessGroupNameDTO processGroup) {
    this.processGroup = processGroup;
  }

  public AffectedComponentEntity referenceType(ReferenceTypeEnum referenceType) {
    this.referenceType = referenceType;
    return this;
  }

   /**
   * The type of component referenced
   * @return referenceType
  **/
  @Schema(description = "The type of component referenced")
  public ReferenceTypeEnum getReferenceType() {
    return referenceType;
  }

  public void setReferenceType(ReferenceTypeEnum referenceType) {
    this.referenceType = referenceType;
  }

  public AffectedComponentEntity revision(RevisionDTO revision) {
    this.revision = revision;
    return this;
  }

   /**
   * Get revision
   * @return revision
  **/
  @Schema(description = "")
  public RevisionDTO getRevision() {
    return revision;
  }

  public void setRevision(RevisionDTO revision) {
    this.revision = revision;
  }

  public AffectedComponentEntity uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * The URI for futures requests to the component.
   * @return uri
  **/
  @Schema(description = "The URI for futures requests to the component.")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AffectedComponentEntity affectedComponentEntity = (AffectedComponentEntity) o;
    return Objects.equals(this.bulletins, affectedComponentEntity.bulletins) &&
        Objects.equals(this.component, affectedComponentEntity.component) &&
        Objects.equals(this.disconnectedNodeAcknowledged, affectedComponentEntity.disconnectedNodeAcknowledged) &&
        Objects.equals(this.id, affectedComponentEntity.id) &&
        Objects.equals(this.permissions, affectedComponentEntity.permissions) &&
        Objects.equals(this.position, affectedComponentEntity.position) &&
        Objects.equals(this.processGroup, affectedComponentEntity.processGroup) &&
        Objects.equals(this.referenceType, affectedComponentEntity.referenceType) &&
        Objects.equals(this.revision, affectedComponentEntity.revision) &&
        Objects.equals(this.uri, affectedComponentEntity.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bulletins, component, disconnectedNodeAcknowledged, id, permissions, position, processGroup, referenceType, revision, uri);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AffectedComponentEntity {\n");
    
    sb.append("    bulletins: ").append(toIndentedString(bulletins)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    disconnectedNodeAcknowledged: ").append(toIndentedString(disconnectedNodeAcknowledged)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    processGroup: ").append(toIndentedString(processGroup)).append("\n");
    sb.append("    referenceType: ").append(toIndentedString(referenceType)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
