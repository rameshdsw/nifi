/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ProcessgroupsUploadBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class ProcessgroupsUploadBody {
  @JsonProperty("clientId")
  private String clientId = null;

  @JsonProperty("disconnectedNodeAcknowledged")
  private Boolean disconnectedNodeAcknowledged = false;

  @JsonProperty("file")
  private Object file = null;

  @JsonProperty("groupName")
  private String groupName = null;

  @JsonProperty("positionX")
  private Double positionX = null;

  @JsonProperty("positionY")
  private Double positionY = null;

  public ProcessgroupsUploadBody clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * The client id.
   * @return clientId
  **/
  @Schema(required = true, description = "The client id.")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public ProcessgroupsUploadBody disconnectedNodeAcknowledged(Boolean disconnectedNodeAcknowledged) {
    this.disconnectedNodeAcknowledged = disconnectedNodeAcknowledged;
    return this;
  }

   /**
   * Acknowledges that this node is disconnected to allow for mutable requests to proceed.
   * @return disconnectedNodeAcknowledged
  **/
  @Schema(description = "Acknowledges that this node is disconnected to allow for mutable requests to proceed.")
  public Boolean isDisconnectedNodeAcknowledged() {
    return disconnectedNodeAcknowledged;
  }

  public void setDisconnectedNodeAcknowledged(Boolean disconnectedNodeAcknowledged) {
    this.disconnectedNodeAcknowledged = disconnectedNodeAcknowledged;
  }

  public ProcessgroupsUploadBody file(Object file) {
    this.file = file;
    return this;
  }

   /**
   * Get file
   * @return file
  **/
  @Schema(description = "")
  public Object getFile() {
    return file;
  }

  public void setFile(Object file) {
    this.file = file;
  }

  public ProcessgroupsUploadBody groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

   /**
   * The process group name.
   * @return groupName
  **/
  @Schema(required = true, description = "The process group name.")
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public ProcessgroupsUploadBody positionX(Double positionX) {
    this.positionX = positionX;
    return this;
  }

   /**
   * The process group X position.
   * @return positionX
  **/
  @Schema(required = true, description = "The process group X position.")
  public Double getPositionX() {
    return positionX;
  }

  public void setPositionX(Double positionX) {
    this.positionX = positionX;
  }

  public ProcessgroupsUploadBody positionY(Double positionY) {
    this.positionY = positionY;
    return this;
  }

   /**
   * The process group Y position.
   * @return positionY
  **/
  @Schema(required = true, description = "The process group Y position.")
  public Double getPositionY() {
    return positionY;
  }

  public void setPositionY(Double positionY) {
    this.positionY = positionY;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessgroupsUploadBody processgroupsUploadBody = (ProcessgroupsUploadBody) o;
    return Objects.equals(this.clientId, processgroupsUploadBody.clientId) &&
        Objects.equals(this.disconnectedNodeAcknowledged, processgroupsUploadBody.disconnectedNodeAcknowledged) &&
        Objects.equals(this.file, processgroupsUploadBody.file) &&
        Objects.equals(this.groupName, processgroupsUploadBody.groupName) &&
        Objects.equals(this.positionX, processgroupsUploadBody.positionX) &&
        Objects.equals(this.positionY, processgroupsUploadBody.positionY);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, disconnectedNodeAcknowledged, file, groupName, positionX, positionY);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessgroupsUploadBody {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    disconnectedNodeAcknowledged: ").append(toIndentedString(disconnectedNodeAcknowledged)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    positionX: ").append(toIndentedString(positionX)).append("\n");
    sb.append("    positionY: ").append(toIndentedString(positionY)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
