/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * The configuration analysis
 */
@Schema(description = "The configuration analysis")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class ConfigurationAnalysisDTO {
  @JsonProperty("componentId")
  private String componentId = null;

  @JsonProperty("properties")
  private Map<String, String> properties = null;

  @JsonProperty("referencedAttributes")
  private Map<String, String> referencedAttributes = null;

  @JsonProperty("supportsVerification")
  private Boolean supportsVerification = null;

  public ConfigurationAnalysisDTO componentId(String componentId) {
    this.componentId = componentId;
    return this;
  }

   /**
   * The ID of the component
   * @return componentId
  **/
  @Schema(description = "The ID of the component")
  public String getComponentId() {
    return componentId;
  }

  public void setComponentId(String componentId) {
    this.componentId = componentId;
  }

  public ConfigurationAnalysisDTO properties(Map<String, String> properties) {
    this.properties = properties;
    return this;
  }

  public ConfigurationAnalysisDTO putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * The configured properties for the component
   * @return properties
  **/
  @Schema(description = "The configured properties for the component")
  public Map<String, String> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }

  public ConfigurationAnalysisDTO referencedAttributes(Map<String, String> referencedAttributes) {
    this.referencedAttributes = referencedAttributes;
    return this;
  }

  public ConfigurationAnalysisDTO putReferencedAttributesItem(String key, String referencedAttributesItem) {
    if (this.referencedAttributes == null) {
      this.referencedAttributes = new HashMap<>();
    }
    this.referencedAttributes.put(key, referencedAttributesItem);
    return this;
  }

   /**
   * The attributes that are referenced by the properties, mapped to recently used values
   * @return referencedAttributes
  **/
  @Schema(description = "The attributes that are referenced by the properties, mapped to recently used values")
  public Map<String, String> getReferencedAttributes() {
    return referencedAttributes;
  }

  public void setReferencedAttributes(Map<String, String> referencedAttributes) {
    this.referencedAttributes = referencedAttributes;
  }

  public ConfigurationAnalysisDTO supportsVerification(Boolean supportsVerification) {
    this.supportsVerification = supportsVerification;
    return this;
  }

   /**
   * Whether or not the component supports verification
   * @return supportsVerification
  **/
  @Schema(description = "Whether or not the component supports verification")
  public Boolean isSupportsVerification() {
    return supportsVerification;
  }

  public void setSupportsVerification(Boolean supportsVerification) {
    this.supportsVerification = supportsVerification;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigurationAnalysisDTO configurationAnalysisDTO = (ConfigurationAnalysisDTO) o;
    return Objects.equals(this.componentId, configurationAnalysisDTO.componentId) &&
        Objects.equals(this.properties, configurationAnalysisDTO.properties) &&
        Objects.equals(this.referencedAttributes, configurationAnalysisDTO.referencedAttributes) &&
        Objects.equals(this.supportsVerification, configurationAnalysisDTO.supportsVerification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(componentId, properties, referencedAttributes, supportsVerification);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigurationAnalysisDTO {\n");
    
    sb.append("    componentId: ").append(toIndentedString(componentId)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    referencedAttributes: ").append(toIndentedString(referencedAttributes)).append("\n");
    sb.append("    supportsVerification: ").append(toIndentedString(supportsVerification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
