/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Represents the processor&#x27;s processing performance.
 */
@Schema(description = "Represents the processor's processing performance.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class ProcessingPerformanceStatusDTO {
  @JsonProperty("contentReadDuration")
  private Long contentReadDuration = null;

  @JsonProperty("contentWriteDuration")
  private Long contentWriteDuration = null;

  @JsonProperty("cpuDuration")
  private Long cpuDuration = null;

  @JsonProperty("garbageCollectionDuration")
  private Long garbageCollectionDuration = null;

  @JsonProperty("identifier")
  private String identifier = null;

  @JsonProperty("sessionCommitDuration")
  private Long sessionCommitDuration = null;

  public ProcessingPerformanceStatusDTO contentReadDuration(Long contentReadDuration) {
    this.contentReadDuration = contentReadDuration;
    return this;
  }

   /**
   * The number of nanoseconds has spent to read content in the last 5 minutes.
   * @return contentReadDuration
  **/
  @Schema(description = "The number of nanoseconds has spent to read content in the last 5 minutes.")
  public Long getContentReadDuration() {
    return contentReadDuration;
  }

  public void setContentReadDuration(Long contentReadDuration) {
    this.contentReadDuration = contentReadDuration;
  }

  public ProcessingPerformanceStatusDTO contentWriteDuration(Long contentWriteDuration) {
    this.contentWriteDuration = contentWriteDuration;
    return this;
  }

   /**
   * The number of nanoseconds has spent to write content in the last 5 minutes.
   * @return contentWriteDuration
  **/
  @Schema(description = "The number of nanoseconds has spent to write content in the last 5 minutes.")
  public Long getContentWriteDuration() {
    return contentWriteDuration;
  }

  public void setContentWriteDuration(Long contentWriteDuration) {
    this.contentWriteDuration = contentWriteDuration;
  }

  public ProcessingPerformanceStatusDTO cpuDuration(Long cpuDuration) {
    this.cpuDuration = cpuDuration;
    return this;
  }

   /**
   * The number of nanoseconds has spent on CPU usage in the last 5 minutes.
   * @return cpuDuration
  **/
  @Schema(description = "The number of nanoseconds has spent on CPU usage in the last 5 minutes.")
  public Long getCpuDuration() {
    return cpuDuration;
  }

  public void setCpuDuration(Long cpuDuration) {
    this.cpuDuration = cpuDuration;
  }

  public ProcessingPerformanceStatusDTO garbageCollectionDuration(Long garbageCollectionDuration) {
    this.garbageCollectionDuration = garbageCollectionDuration;
    return this;
  }

   /**
   * The number of nanoseconds has spent running garbage collection in the last 5 minutes.
   * @return garbageCollectionDuration
  **/
  @Schema(description = "The number of nanoseconds has spent running garbage collection in the last 5 minutes.")
  public Long getGarbageCollectionDuration() {
    return garbageCollectionDuration;
  }

  public void setGarbageCollectionDuration(Long garbageCollectionDuration) {
    this.garbageCollectionDuration = garbageCollectionDuration;
  }

  public ProcessingPerformanceStatusDTO identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * The unique ID of the process group that the Processor belongs to
   * @return identifier
  **/
  @Schema(description = "The unique ID of the process group that the Processor belongs to")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public ProcessingPerformanceStatusDTO sessionCommitDuration(Long sessionCommitDuration) {
    this.sessionCommitDuration = sessionCommitDuration;
    return this;
  }

   /**
   * The number of nanoseconds has spent running to commit sessions the last 5 minutes.
   * @return sessionCommitDuration
  **/
  @Schema(description = "The number of nanoseconds has spent running to commit sessions the last 5 minutes.")
  public Long getSessionCommitDuration() {
    return sessionCommitDuration;
  }

  public void setSessionCommitDuration(Long sessionCommitDuration) {
    this.sessionCommitDuration = sessionCommitDuration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessingPerformanceStatusDTO processingPerformanceStatusDTO = (ProcessingPerformanceStatusDTO) o;
    return Objects.equals(this.contentReadDuration, processingPerformanceStatusDTO.contentReadDuration) &&
        Objects.equals(this.contentWriteDuration, processingPerformanceStatusDTO.contentWriteDuration) &&
        Objects.equals(this.cpuDuration, processingPerformanceStatusDTO.cpuDuration) &&
        Objects.equals(this.garbageCollectionDuration, processingPerformanceStatusDTO.garbageCollectionDuration) &&
        Objects.equals(this.identifier, processingPerformanceStatusDTO.identifier) &&
        Objects.equals(this.sessionCommitDuration, processingPerformanceStatusDTO.sessionCommitDuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentReadDuration, contentWriteDuration, cpuDuration, garbageCollectionDuration, identifier, sessionCommitDuration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessingPerformanceStatusDTO {\n");
    
    sb.append("    contentReadDuration: ").append(toIndentedString(contentReadDuration)).append("\n");
    sb.append("    contentWriteDuration: ").append(toIndentedString(contentWriteDuration)).append("\n");
    sb.append("    cpuDuration: ").append(toIndentedString(cpuDuration)).append("\n");
    sb.append("    garbageCollectionDuration: ").append(toIndentedString(garbageCollectionDuration)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    sessionCommitDuration: ").append(toIndentedString(sessionCommitDuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
