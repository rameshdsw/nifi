/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.apache.nifi.api.toolkit.model.AffectedComponentEntity;
import org.apache.nifi.api.toolkit.model.ParameterContextUpdateEntity;
import org.apache.nifi.api.toolkit.model.ParameterProviderApplyParametersUpdateStepDTO;
import org.apache.nifi.api.toolkit.model.ParameterProviderDTO;
/**
 * The Apply Parameters Request
 */
@Schema(description = "The Apply Parameters Request")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class ParameterProviderApplyParametersRequestDTO {
  @JsonProperty("complete")
  private Boolean complete = null;

  @JsonProperty("failureReason")
  private String failureReason = null;

  @JsonProperty("lastUpdated")
  private OffsetDateTime lastUpdated = null;

  @JsonProperty("parameterContextUpdates")
  private List<ParameterContextUpdateEntity> parameterContextUpdates = null;

  @JsonProperty("parameterProvider")
  private ParameterProviderDTO parameterProvider = null;

  @JsonProperty("percentCompleted")
  private Integer percentCompleted = null;

  @JsonProperty("referencingComponents")
  private List<AffectedComponentEntity> referencingComponents = null;

  @JsonProperty("requestId")
  private String requestId = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("submissionTime")
  private OffsetDateTime submissionTime = null;

  @JsonProperty("updateSteps")
  private List<ParameterProviderApplyParametersUpdateStepDTO> updateSteps = null;

  @JsonProperty("uri")
  private String uri = null;

   /**
   * Whether or not the request is completed
   * @return complete
  **/
  @Schema(description = "Whether or not the request is completed")
  public Boolean isComplete() {
    return complete;
  }

   /**
   * The reason for the request failing, or null if the request has not failed
   * @return failureReason
  **/
  @Schema(description = "The reason for the request failing, or null if the request has not failed")
  public String getFailureReason() {
    return failureReason;
  }

   /**
   * The timestamp of when the request was last updated
   * @return lastUpdated
  **/
  @Schema(description = "The timestamp of when the request was last updated")
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

   /**
   * The Parameter Contexts updated by this Parameter Provider. This may not be populated until the request has successfully completed.
   * @return parameterContextUpdates
  **/
  @Schema(description = "The Parameter Contexts updated by this Parameter Provider. This may not be populated until the request has successfully completed.")
  public List<ParameterContextUpdateEntity> getParameterContextUpdates() {
    return parameterContextUpdates;
  }

  public ParameterProviderApplyParametersRequestDTO parameterProvider(ParameterProviderDTO parameterProvider) {
    this.parameterProvider = parameterProvider;
    return this;
  }

   /**
   * Get parameterProvider
   * @return parameterProvider
  **/
  @Schema(description = "")
  public ParameterProviderDTO getParameterProvider() {
    return parameterProvider;
  }

  public void setParameterProvider(ParameterProviderDTO parameterProvider) {
    this.parameterProvider = parameterProvider;
  }

   /**
   * A value between 0 and 100 (inclusive) indicating how close the request is to completion
   * @return percentCompleted
  **/
  @Schema(description = "A value between 0 and 100 (inclusive) indicating how close the request is to completion")
  public Integer getPercentCompleted() {
    return percentCompleted;
  }

   /**
   * The components that are referenced by the update.
   * @return referencingComponents
  **/
  @Schema(description = "The components that are referenced by the update.")
  public List<AffectedComponentEntity> getReferencingComponents() {
    return referencingComponents;
  }

   /**
   * The ID of the request
   * @return requestId
  **/
  @Schema(description = "The ID of the request")
  public String getRequestId() {
    return requestId;
  }

   /**
   * A description of the current state of the request
   * @return state
  **/
  @Schema(description = "A description of the current state of the request")
  public String getState() {
    return state;
  }

   /**
   * The timestamp of when the request was submitted
   * @return submissionTime
  **/
  @Schema(description = "The timestamp of when the request was submitted")
  public OffsetDateTime getSubmissionTime() {
    return submissionTime;
  }

   /**
   * The steps that are required in order to complete the request, along with the status of each
   * @return updateSteps
  **/
  @Schema(description = "The steps that are required in order to complete the request, along with the status of each")
  public List<ParameterProviderApplyParametersUpdateStepDTO> getUpdateSteps() {
    return updateSteps;
  }

   /**
   * The URI for the request
   * @return uri
  **/
  @Schema(description = "The URI for the request")
  public String getUri() {
    return uri;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParameterProviderApplyParametersRequestDTO parameterProviderApplyParametersRequestDTO = (ParameterProviderApplyParametersRequestDTO) o;
    return Objects.equals(this.complete, parameterProviderApplyParametersRequestDTO.complete) &&
        Objects.equals(this.failureReason, parameterProviderApplyParametersRequestDTO.failureReason) &&
        Objects.equals(this.lastUpdated, parameterProviderApplyParametersRequestDTO.lastUpdated) &&
        Objects.equals(this.parameterContextUpdates, parameterProviderApplyParametersRequestDTO.parameterContextUpdates) &&
        Objects.equals(this.parameterProvider, parameterProviderApplyParametersRequestDTO.parameterProvider) &&
        Objects.equals(this.percentCompleted, parameterProviderApplyParametersRequestDTO.percentCompleted) &&
        Objects.equals(this.referencingComponents, parameterProviderApplyParametersRequestDTO.referencingComponents) &&
        Objects.equals(this.requestId, parameterProviderApplyParametersRequestDTO.requestId) &&
        Objects.equals(this.state, parameterProviderApplyParametersRequestDTO.state) &&
        Objects.equals(this.submissionTime, parameterProviderApplyParametersRequestDTO.submissionTime) &&
        Objects.equals(this.updateSteps, parameterProviderApplyParametersRequestDTO.updateSteps) &&
        Objects.equals(this.uri, parameterProviderApplyParametersRequestDTO.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(complete, failureReason, lastUpdated, parameterContextUpdates, parameterProvider, percentCompleted, referencingComponents, requestId, state, submissionTime, updateSteps, uri);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParameterProviderApplyParametersRequestDTO {\n");
    
    sb.append("    complete: ").append(toIndentedString(complete)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    parameterContextUpdates: ").append(toIndentedString(parameterContextUpdates)).append("\n");
    sb.append("    parameterProvider: ").append(toIndentedString(parameterProvider)).append("\n");
    sb.append("    percentCompleted: ").append(toIndentedString(percentCompleted)).append("\n");
    sb.append("    referencingComponents: ").append(toIndentedString(referencingComponents)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    submissionTime: ").append(toIndentedString(submissionTime)).append("\n");
    sb.append("    updateSteps: ").append(toIndentedString(updateSteps)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
