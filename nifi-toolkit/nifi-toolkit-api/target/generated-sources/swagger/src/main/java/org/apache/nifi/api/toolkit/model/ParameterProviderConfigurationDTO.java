/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ParameterProviderConfigurationDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class ParameterProviderConfigurationDTO {
  @JsonProperty("parameterGroupName")
  private String parameterGroupName = null;

  @JsonProperty("parameterProviderId")
  private String parameterProviderId = null;

  @JsonProperty("parameterProviderName")
  private String parameterProviderName = null;

  @JsonProperty("synchronized")
  private Boolean _synchronized = null;

  public ParameterProviderConfigurationDTO parameterGroupName(String parameterGroupName) {
    this.parameterGroupName = parameterGroupName;
    return this;
  }

   /**
   * The Parameter Group name that maps to the Parameter Context
   * @return parameterGroupName
  **/
  @Schema(description = "The Parameter Group name that maps to the Parameter Context")
  public String getParameterGroupName() {
    return parameterGroupName;
  }

  public void setParameterGroupName(String parameterGroupName) {
    this.parameterGroupName = parameterGroupName;
  }

  public ParameterProviderConfigurationDTO parameterProviderId(String parameterProviderId) {
    this.parameterProviderId = parameterProviderId;
    return this;
  }

   /**
   * The ID of the Parameter Provider
   * @return parameterProviderId
  **/
  @Schema(description = "The ID of the Parameter Provider")
  public String getParameterProviderId() {
    return parameterProviderId;
  }

  public void setParameterProviderId(String parameterProviderId) {
    this.parameterProviderId = parameterProviderId;
  }

  public ParameterProviderConfigurationDTO parameterProviderName(String parameterProviderName) {
    this.parameterProviderName = parameterProviderName;
    return this;
  }

   /**
   * The name of the Parameter Provider
   * @return parameterProviderName
  **/
  @Schema(description = "The name of the Parameter Provider")
  public String getParameterProviderName() {
    return parameterProviderName;
  }

  public void setParameterProviderName(String parameterProviderName) {
    this.parameterProviderName = parameterProviderName;
  }

  public ParameterProviderConfigurationDTO _synchronized(Boolean _synchronized) {
    this._synchronized = _synchronized;
    return this;
  }

   /**
   * True if the Parameter Context should receive the parameters from the mapped Parameter Group
   * @return _synchronized
  **/
  @Schema(description = "True if the Parameter Context should receive the parameters from the mapped Parameter Group")
  public Boolean isSynchronized() {
    return _synchronized;
  }

  public void setSynchronized(Boolean _synchronized) {
    this._synchronized = _synchronized;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParameterProviderConfigurationDTO parameterProviderConfigurationDTO = (ParameterProviderConfigurationDTO) o;
    return Objects.equals(this.parameterGroupName, parameterProviderConfigurationDTO.parameterGroupName) &&
        Objects.equals(this.parameterProviderId, parameterProviderConfigurationDTO.parameterProviderId) &&
        Objects.equals(this.parameterProviderName, parameterProviderConfigurationDTO.parameterProviderName) &&
        Objects.equals(this._synchronized, parameterProviderConfigurationDTO._synchronized);
  }

  @Override
  public int hashCode() {
    return Objects.hash(parameterGroupName, parameterProviderId, parameterProviderName, _synchronized);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParameterProviderConfigurationDTO {\n");
    
    sb.append("    parameterGroupName: ").append(toIndentedString(parameterGroupName)).append("\n");
    sb.append("    parameterProviderId: ").append(toIndentedString(parameterProviderId)).append("\n");
    sb.append("    parameterProviderName: ").append(toIndentedString(parameterProviderName)).append("\n");
    sb.append("    _synchronized: ").append(toIndentedString(_synchronized)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
