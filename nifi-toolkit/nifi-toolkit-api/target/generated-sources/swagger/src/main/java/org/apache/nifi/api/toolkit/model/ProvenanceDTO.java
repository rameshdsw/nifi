/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.apache.nifi.api.toolkit.model.ProvenanceRequestDTO;
import org.apache.nifi.api.toolkit.model.ProvenanceResultsDTO;
/**
 * ProvenanceDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class ProvenanceDTO {
  @JsonProperty("expiration")
  private String expiration = null;

  @JsonProperty("finished")
  private Boolean finished = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("percentCompleted")
  private Integer percentCompleted = null;

  @JsonProperty("request")
  private ProvenanceRequestDTO request = null;

  @JsonProperty("results")
  private ProvenanceResultsDTO results = null;

  @JsonProperty("submissionTime")
  private String submissionTime = null;

  @JsonProperty("uri")
  private String uri = null;

  public ProvenanceDTO expiration(String expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * The timestamp when the query will expire.
   * @return expiration
  **/
  @Schema(description = "The timestamp when the query will expire.")
  public String getExpiration() {
    return expiration;
  }

  public void setExpiration(String expiration) {
    this.expiration = expiration;
  }

  public ProvenanceDTO finished(Boolean finished) {
    this.finished = finished;
    return this;
  }

   /**
   * Whether the query has finished.
   * @return finished
  **/
  @Schema(description = "Whether the query has finished.")
  public Boolean isFinished() {
    return finished;
  }

  public void setFinished(Boolean finished) {
    this.finished = finished;
  }

  public ProvenanceDTO id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the provenance query.
   * @return id
  **/
  @Schema(description = "The id of the provenance query.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProvenanceDTO percentCompleted(Integer percentCompleted) {
    this.percentCompleted = percentCompleted;
    return this;
  }

   /**
   * The current percent complete.
   * @return percentCompleted
  **/
  @Schema(description = "The current percent complete.")
  public Integer getPercentCompleted() {
    return percentCompleted;
  }

  public void setPercentCompleted(Integer percentCompleted) {
    this.percentCompleted = percentCompleted;
  }

  public ProvenanceDTO request(ProvenanceRequestDTO request) {
    this.request = request;
    return this;
  }

   /**
   * Get request
   * @return request
  **/
  @Schema(description = "")
  public ProvenanceRequestDTO getRequest() {
    return request;
  }

  public void setRequest(ProvenanceRequestDTO request) {
    this.request = request;
  }

  public ProvenanceDTO results(ProvenanceResultsDTO results) {
    this.results = results;
    return this;
  }

   /**
   * Get results
   * @return results
  **/
  @Schema(description = "")
  public ProvenanceResultsDTO getResults() {
    return results;
  }

  public void setResults(ProvenanceResultsDTO results) {
    this.results = results;
  }

  public ProvenanceDTO submissionTime(String submissionTime) {
    this.submissionTime = submissionTime;
    return this;
  }

   /**
   * The timestamp when the query was submitted.
   * @return submissionTime
  **/
  @Schema(description = "The timestamp when the query was submitted.")
  public String getSubmissionTime() {
    return submissionTime;
  }

  public void setSubmissionTime(String submissionTime) {
    this.submissionTime = submissionTime;
  }

  public ProvenanceDTO uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * The URI for this query. Used for obtaining/deleting the request at a later time
   * @return uri
  **/
  @Schema(description = "The URI for this query. Used for obtaining/deleting the request at a later time")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProvenanceDTO provenanceDTO = (ProvenanceDTO) o;
    return Objects.equals(this.expiration, provenanceDTO.expiration) &&
        Objects.equals(this.finished, provenanceDTO.finished) &&
        Objects.equals(this.id, provenanceDTO.id) &&
        Objects.equals(this.percentCompleted, provenanceDTO.percentCompleted) &&
        Objects.equals(this.request, provenanceDTO.request) &&
        Objects.equals(this.results, provenanceDTO.results) &&
        Objects.equals(this.submissionTime, provenanceDTO.submissionTime) &&
        Objects.equals(this.uri, provenanceDTO.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expiration, finished, id, percentCompleted, request, results, submissionTime, uri);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProvenanceDTO {\n");
    
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    finished: ").append(toIndentedString(finished)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    percentCompleted: ").append(toIndentedString(percentCompleted)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    submissionTime: ").append(toIndentedString(submissionTime)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
