/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.apache.nifi.api.toolkit.model.FlowAnalysisRuleDTO;
import org.apache.nifi.api.toolkit.model.FlowAnalysisRuleViolationDTO;
/**
 * FlowAnalysisResultEntity
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class FlowAnalysisResultEntity {
  @JsonProperty("flowAnalysisPending")
  private Boolean flowAnalysisPending = null;

  @JsonProperty("ruleViolations")
  private List<FlowAnalysisRuleViolationDTO> ruleViolations = null;

  @JsonProperty("rules")
  private List<FlowAnalysisRuleDTO> rules = null;

  public FlowAnalysisResultEntity flowAnalysisPending(Boolean flowAnalysisPending) {
    this.flowAnalysisPending = flowAnalysisPending;
    return this;
  }

   /**
   * Get flowAnalysisPending
   * @return flowAnalysisPending
  **/
  @Schema(description = "")
  public Boolean isFlowAnalysisPending() {
    return flowAnalysisPending;
  }

  public void setFlowAnalysisPending(Boolean flowAnalysisPending) {
    this.flowAnalysisPending = flowAnalysisPending;
  }

  public FlowAnalysisResultEntity ruleViolations(List<FlowAnalysisRuleViolationDTO> ruleViolations) {
    this.ruleViolations = ruleViolations;
    return this;
  }

  public FlowAnalysisResultEntity addRuleViolationsItem(FlowAnalysisRuleViolationDTO ruleViolationsItem) {
    if (this.ruleViolations == null) {
      this.ruleViolations = new ArrayList<>();
    }
    this.ruleViolations.add(ruleViolationsItem);
    return this;
  }

   /**
   * Get ruleViolations
   * @return ruleViolations
  **/
  @Schema(description = "")
  public List<FlowAnalysisRuleViolationDTO> getRuleViolations() {
    return ruleViolations;
  }

  public void setRuleViolations(List<FlowAnalysisRuleViolationDTO> ruleViolations) {
    this.ruleViolations = ruleViolations;
  }

  public FlowAnalysisResultEntity rules(List<FlowAnalysisRuleDTO> rules) {
    this.rules = rules;
    return this;
  }

  public FlowAnalysisResultEntity addRulesItem(FlowAnalysisRuleDTO rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<>();
    }
    this.rules.add(rulesItem);
    return this;
  }

   /**
   * Get rules
   * @return rules
  **/
  @Schema(description = "")
  public List<FlowAnalysisRuleDTO> getRules() {
    return rules;
  }

  public void setRules(List<FlowAnalysisRuleDTO> rules) {
    this.rules = rules;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowAnalysisResultEntity flowAnalysisResultEntity = (FlowAnalysisResultEntity) o;
    return Objects.equals(this.flowAnalysisPending, flowAnalysisResultEntity.flowAnalysisPending) &&
        Objects.equals(this.ruleViolations, flowAnalysisResultEntity.ruleViolations) &&
        Objects.equals(this.rules, flowAnalysisResultEntity.rules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(flowAnalysisPending, ruleViolations, rules);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowAnalysisResultEntity {\n");
    
    sb.append("    flowAnalysisPending: ").append(toIndentedString(flowAnalysisPending)).append("\n");
    sb.append("    ruleViolations: ").append(toIndentedString(ruleViolations)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
