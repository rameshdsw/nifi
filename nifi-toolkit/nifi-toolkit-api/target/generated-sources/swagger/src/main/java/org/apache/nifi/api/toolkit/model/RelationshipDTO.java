/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * The available relationships that the processor currently supports.
 */
@Schema(description = "The available relationships that the processor currently supports.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class RelationshipDTO {
  @JsonProperty("autoTerminate")
  private Boolean autoTerminate = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("retry")
  private Boolean retry = null;

  public RelationshipDTO autoTerminate(Boolean autoTerminate) {
    this.autoTerminate = autoTerminate;
    return this;
  }

   /**
   * Whether or not flowfiles sent to this relationship should auto terminate.
   * @return autoTerminate
  **/
  @Schema(description = "Whether or not flowfiles sent to this relationship should auto terminate.")
  public Boolean isAutoTerminate() {
    return autoTerminate;
  }

  public void setAutoTerminate(Boolean autoTerminate) {
    this.autoTerminate = autoTerminate;
  }

  public RelationshipDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The relationship description.
   * @return description
  **/
  @Schema(description = "The relationship description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public RelationshipDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The relationship name.
   * @return name
  **/
  @Schema(description = "The relationship name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RelationshipDTO retry(Boolean retry) {
    this.retry = retry;
    return this;
  }

   /**
   * Whether or not flowfiles sent to this relationship should retry.
   * @return retry
  **/
  @Schema(description = "Whether or not flowfiles sent to this relationship should retry.")
  public Boolean isRetry() {
    return retry;
  }

  public void setRetry(Boolean retry) {
    this.retry = retry;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RelationshipDTO relationshipDTO = (RelationshipDTO) o;
    return Objects.equals(this.autoTerminate, relationshipDTO.autoTerminate) &&
        Objects.equals(this.description, relationshipDTO.description) &&
        Objects.equals(this.name, relationshipDTO.name) &&
        Objects.equals(this.retry, relationshipDTO.retry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoTerminate, description, name, retry);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RelationshipDTO {\n");
    
    sb.append("    autoTerminate: ").append(toIndentedString(autoTerminate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    retry: ").append(toIndentedString(retry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
