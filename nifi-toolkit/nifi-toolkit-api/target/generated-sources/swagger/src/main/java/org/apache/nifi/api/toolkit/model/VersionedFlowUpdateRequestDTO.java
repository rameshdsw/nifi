/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.apache.nifi.api.toolkit.model.VersionControlInformationDTO;
/**
 * The Flow Update Request
 */
@Schema(description = "The Flow Update Request")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class VersionedFlowUpdateRequestDTO {
  @JsonProperty("complete")
  private Boolean complete = null;

  @JsonProperty("failureReason")
  private String failureReason = null;

  @JsonProperty("lastUpdated")
  private String lastUpdated = null;

  @JsonProperty("percentCompleted")
  private Integer percentCompleted = null;

  @JsonProperty("processGroupId")
  private String processGroupId = null;

  @JsonProperty("requestId")
  private String requestId = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("uri")
  private String uri = null;

  @JsonProperty("versionControlInformation")
  private VersionControlInformationDTO versionControlInformation = null;

   /**
   * Whether or not this request has completed
   * @return complete
  **/
  @Schema(description = "Whether or not this request has completed")
  public Boolean isComplete() {
    return complete;
  }

   /**
   * An explanation of why this request failed, or null if this request has not failed
   * @return failureReason
  **/
  @Schema(description = "An explanation of why this request failed, or null if this request has not failed")
  public String getFailureReason() {
    return failureReason;
  }

   /**
   * The last time this request was updated.
   * @return lastUpdated
  **/
  @Schema(description = "The last time this request was updated.")
  public String getLastUpdated() {
    return lastUpdated;
  }

   /**
   * The percentage complete for the request, between 0 and 100
   * @return percentCompleted
  **/
  @Schema(description = "The percentage complete for the request, between 0 and 100")
  public Integer getPercentCompleted() {
    return percentCompleted;
  }

  public VersionedFlowUpdateRequestDTO processGroupId(String processGroupId) {
    this.processGroupId = processGroupId;
    return this;
  }

   /**
   * The unique ID of the Process Group being updated
   * @return processGroupId
  **/
  @Schema(description = "The unique ID of the Process Group being updated")
  public String getProcessGroupId() {
    return processGroupId;
  }

  public void setProcessGroupId(String processGroupId) {
    this.processGroupId = processGroupId;
  }

   /**
   * The unique ID of this request.
   * @return requestId
  **/
  @Schema(description = "The unique ID of this request.")
  public String getRequestId() {
    return requestId;
  }

   /**
   * The state of the request
   * @return state
  **/
  @Schema(description = "The state of the request")
  public String getState() {
    return state;
  }

   /**
   * The URI for future requests to this drop request.
   * @return uri
  **/
  @Schema(description = "The URI for future requests to this drop request.")
  public String getUri() {
    return uri;
  }

  public VersionedFlowUpdateRequestDTO versionControlInformation(VersionControlInformationDTO versionControlInformation) {
    this.versionControlInformation = versionControlInformation;
    return this;
  }

   /**
   * Get versionControlInformation
   * @return versionControlInformation
  **/
  @Schema(description = "")
  public VersionControlInformationDTO getVersionControlInformation() {
    return versionControlInformation;
  }

  public void setVersionControlInformation(VersionControlInformationDTO versionControlInformation) {
    this.versionControlInformation = versionControlInformation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionedFlowUpdateRequestDTO versionedFlowUpdateRequestDTO = (VersionedFlowUpdateRequestDTO) o;
    return Objects.equals(this.complete, versionedFlowUpdateRequestDTO.complete) &&
        Objects.equals(this.failureReason, versionedFlowUpdateRequestDTO.failureReason) &&
        Objects.equals(this.lastUpdated, versionedFlowUpdateRequestDTO.lastUpdated) &&
        Objects.equals(this.percentCompleted, versionedFlowUpdateRequestDTO.percentCompleted) &&
        Objects.equals(this.processGroupId, versionedFlowUpdateRequestDTO.processGroupId) &&
        Objects.equals(this.requestId, versionedFlowUpdateRequestDTO.requestId) &&
        Objects.equals(this.state, versionedFlowUpdateRequestDTO.state) &&
        Objects.equals(this.uri, versionedFlowUpdateRequestDTO.uri) &&
        Objects.equals(this.versionControlInformation, versionedFlowUpdateRequestDTO.versionControlInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(complete, failureReason, lastUpdated, percentCompleted, processGroupId, requestId, state, uri, versionControlInformation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionedFlowUpdateRequestDTO {\n");
    
    sb.append("    complete: ").append(toIndentedString(complete)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    percentCompleted: ").append(toIndentedString(percentCompleted)).append("\n");
    sb.append("    processGroupId: ").append(toIndentedString(processGroupId)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    versionControlInformation: ").append(toIndentedString(versionControlInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
