/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.apache.nifi.api.toolkit.model.AffectedComponentEntity;
import org.apache.nifi.api.toolkit.model.ParameterContextDTO;
import org.apache.nifi.api.toolkit.model.RevisionDTO;
/**
 * The Parameter Contexts updated by this Parameter Provider. This may not be populated until the request has successfully completed.
 */
@Schema(description = "The Parameter Contexts updated by this Parameter Provider. This may not be populated until the request has successfully completed.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class ParameterContextUpdateEntity {
  @JsonProperty("parameterContext")
  private ParameterContextDTO parameterContext = null;

  @JsonProperty("parameterContextRevision")
  private RevisionDTO parameterContextRevision = null;

  @JsonProperty("referencingComponents")
  private List<AffectedComponentEntity> referencingComponents = null;

  public ParameterContextUpdateEntity parameterContext(ParameterContextDTO parameterContext) {
    this.parameterContext = parameterContext;
    return this;
  }

   /**
   * Get parameterContext
   * @return parameterContext
  **/
  @Schema(description = "")
  public ParameterContextDTO getParameterContext() {
    return parameterContext;
  }

  public void setParameterContext(ParameterContextDTO parameterContext) {
    this.parameterContext = parameterContext;
  }

  public ParameterContextUpdateEntity parameterContextRevision(RevisionDTO parameterContextRevision) {
    this.parameterContextRevision = parameterContextRevision;
    return this;
  }

   /**
   * Get parameterContextRevision
   * @return parameterContextRevision
  **/
  @Schema(description = "")
  public RevisionDTO getParameterContextRevision() {
    return parameterContextRevision;
  }

  public void setParameterContextRevision(RevisionDTO parameterContextRevision) {
    this.parameterContextRevision = parameterContextRevision;
  }

   /**
   * The components that are referenced by the update.
   * @return referencingComponents
  **/
  @Schema(description = "The components that are referenced by the update.")
  public List<AffectedComponentEntity> getReferencingComponents() {
    return referencingComponents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParameterContextUpdateEntity parameterContextUpdateEntity = (ParameterContextUpdateEntity) o;
    return Objects.equals(this.parameterContext, parameterContextUpdateEntity.parameterContext) &&
        Objects.equals(this.parameterContextRevision, parameterContextUpdateEntity.parameterContextRevision) &&
        Objects.equals(this.referencingComponents, parameterContextUpdateEntity.referencingComponents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(parameterContext, parameterContextRevision, referencingComponents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParameterContextUpdateEntity {\n");
    
    sb.append("    parameterContext: ").append(toIndentedString(parameterContext)).append("\n");
    sb.append("    parameterContextRevision: ").append(toIndentedString(parameterContextRevision)).append("\n");
    sb.append("    referencingComponents: ").append(toIndentedString(referencingComponents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
