/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.apache.nifi.api.toolkit.model.ProcessorConfiguration;
/**
 * A list of use cases that have been documented that involve this Processor in conjunction with other Processors
 */
@Schema(description = "A list of use cases that have been documented that involve this Processor in conjunction with other Processors")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class MultiProcessorUseCase {
  @JsonProperty("configurations")
  private List<ProcessorConfiguration> configurations = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("keywords")
  private List<String> keywords = null;

  @JsonProperty("notes")
  private String notes = null;

  public MultiProcessorUseCase configurations(List<ProcessorConfiguration> configurations) {
    this.configurations = configurations;
    return this;
  }

  public MultiProcessorUseCase addConfigurationsItem(ProcessorConfiguration configurationsItem) {
    if (this.configurations == null) {
      this.configurations = new ArrayList<>();
    }
    this.configurations.add(configurationsItem);
    return this;
  }

   /**
   * A description of how to configure the Processor to perform the task described in the use case
   * @return configurations
  **/
  @Schema(description = "A description of how to configure the Processor to perform the task described in the use case")
  public List<ProcessorConfiguration> getConfigurations() {
    return configurations;
  }

  public void setConfigurations(List<ProcessorConfiguration> configurations) {
    this.configurations = configurations;
  }

  public MultiProcessorUseCase description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description of the use case
   * @return description
  **/
  @Schema(description = "A description of the use case")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public MultiProcessorUseCase keywords(List<String> keywords) {
    this.keywords = keywords;
    return this;
  }

  public MultiProcessorUseCase addKeywordsItem(String keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

   /**
   * Keywords that pertain to the use csae
   * @return keywords
  **/
  @Schema(description = "Keywords that pertain to the use csae")
  public List<String> getKeywords() {
    return keywords;
  }

  public void setKeywords(List<String> keywords) {
    this.keywords = keywords;
  }

  public MultiProcessorUseCase notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Any pertinent notes about the use case
   * @return notes
  **/
  @Schema(description = "Any pertinent notes about the use case")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MultiProcessorUseCase multiProcessorUseCase = (MultiProcessorUseCase) o;
    return Objects.equals(this.configurations, multiProcessorUseCase.configurations) &&
        Objects.equals(this.description, multiProcessorUseCase.description) &&
        Objects.equals(this.keywords, multiProcessorUseCase.keywords) &&
        Objects.equals(this.notes, multiProcessorUseCase.notes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configurations, description, keywords, notes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MultiProcessorUseCase {\n");
    
    sb.append("    configurations: ").append(toIndentedString(configurations)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
