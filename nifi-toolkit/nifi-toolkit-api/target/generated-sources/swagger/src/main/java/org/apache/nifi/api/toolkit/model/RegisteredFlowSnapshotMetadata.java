/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * RegisteredFlowSnapshotMetadata
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class RegisteredFlowSnapshotMetadata {
  @JsonProperty("author")
  private String author = null;

  @JsonProperty("branch")
  private String branch = null;

  @JsonProperty("bucketIdentifier")
  private String bucketIdentifier = null;

  @JsonProperty("comments")
  private String comments = null;

  @JsonProperty("flowIdentifier")
  private String flowIdentifier = null;

  @JsonProperty("timestamp")
  private Long timestamp = null;

  @JsonProperty("version")
  private String version = null;

  public RegisteredFlowSnapshotMetadata author(String author) {
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @Schema(description = "")
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }

  public RegisteredFlowSnapshotMetadata branch(String branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @Schema(description = "")
  public String getBranch() {
    return branch;
  }

  public void setBranch(String branch) {
    this.branch = branch;
  }

  public RegisteredFlowSnapshotMetadata bucketIdentifier(String bucketIdentifier) {
    this.bucketIdentifier = bucketIdentifier;
    return this;
  }

   /**
   * Get bucketIdentifier
   * @return bucketIdentifier
  **/
  @Schema(description = "")
  public String getBucketIdentifier() {
    return bucketIdentifier;
  }

  public void setBucketIdentifier(String bucketIdentifier) {
    this.bucketIdentifier = bucketIdentifier;
  }

  public RegisteredFlowSnapshotMetadata comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @Schema(description = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public RegisteredFlowSnapshotMetadata flowIdentifier(String flowIdentifier) {
    this.flowIdentifier = flowIdentifier;
    return this;
  }

   /**
   * Get flowIdentifier
   * @return flowIdentifier
  **/
  @Schema(description = "")
  public String getFlowIdentifier() {
    return flowIdentifier;
  }

  public void setFlowIdentifier(String flowIdentifier) {
    this.flowIdentifier = flowIdentifier;
  }

  public RegisteredFlowSnapshotMetadata timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @Schema(description = "")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public RegisteredFlowSnapshotMetadata version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegisteredFlowSnapshotMetadata registeredFlowSnapshotMetadata = (RegisteredFlowSnapshotMetadata) o;
    return Objects.equals(this.author, registeredFlowSnapshotMetadata.author) &&
        Objects.equals(this.branch, registeredFlowSnapshotMetadata.branch) &&
        Objects.equals(this.bucketIdentifier, registeredFlowSnapshotMetadata.bucketIdentifier) &&
        Objects.equals(this.comments, registeredFlowSnapshotMetadata.comments) &&
        Objects.equals(this.flowIdentifier, registeredFlowSnapshotMetadata.flowIdentifier) &&
        Objects.equals(this.timestamp, registeredFlowSnapshotMetadata.timestamp) &&
        Objects.equals(this.version, registeredFlowSnapshotMetadata.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(author, branch, bucketIdentifier, comments, flowIdentifier, timestamp, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegisteredFlowSnapshotMetadata {\n");
    
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    bucketIdentifier: ").append(toIndentedString(bucketIdentifier)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    flowIdentifier: ").append(toIndentedString(flowIdentifier)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
