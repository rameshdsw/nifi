/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * A list of dependencies that must be met in order for this Property to be relevant. If any of these dependencies is not met, the property described by this Property Descriptor is not relevant.
 */
@Schema(description = "A list of dependencies that must be met in order for this Property to be relevant. If any of these dependencies is not met, the property described by this Property Descriptor is not relevant.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class PropertyDependencyDTO {
  @JsonProperty("dependentValues")
  private List<String> dependentValues = null;

  @JsonProperty("propertyName")
  private String propertyName = null;

  public PropertyDependencyDTO dependentValues(List<String> dependentValues) {
    this.dependentValues = dependentValues;
    return this;
  }

  public PropertyDependencyDTO addDependentValuesItem(String dependentValuesItem) {
    if (this.dependentValues == null) {
      this.dependentValues = new ArrayList<>();
    }
    this.dependentValues.add(dependentValuesItem);
    return this;
  }

   /**
   * The values for the property that satisfies the dependency, or null if the dependency is satisfied by the presence of any value for the associated property name
   * @return dependentValues
  **/
  @Schema(description = "The values for the property that satisfies the dependency, or null if the dependency is satisfied by the presence of any value for the associated property name")
  public List<String> getDependentValues() {
    return dependentValues;
  }

  public void setDependentValues(List<String> dependentValues) {
    this.dependentValues = dependentValues;
  }

  public PropertyDependencyDTO propertyName(String propertyName) {
    this.propertyName = propertyName;
    return this;
  }

   /**
   * The name of the property that is being depended upon
   * @return propertyName
  **/
  @Schema(description = "The name of the property that is being depended upon")
  public String getPropertyName() {
    return propertyName;
  }

  public void setPropertyName(String propertyName) {
    this.propertyName = propertyName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyDependencyDTO propertyDependencyDTO = (PropertyDependencyDTO) o;
    return Objects.equals(this.dependentValues, propertyDependencyDTO.dependentValues) &&
        Objects.equals(this.propertyName, propertyDependencyDTO.propertyName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dependentValues, propertyName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyDependencyDTO {\n");
    
    sb.append("    dependentValues: ").append(toIndentedString(dependentValues)).append("\n");
    sb.append("    propertyName: ").append(toIndentedString(propertyName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
