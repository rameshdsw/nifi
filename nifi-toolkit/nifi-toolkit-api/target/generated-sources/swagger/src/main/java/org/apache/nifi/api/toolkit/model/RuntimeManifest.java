/*
 * Apache NiFi REST API
 * REST API definition for Apache NiFi web services
 *
 * OpenAPI spec version: 2.4.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.apache.nifi.api.toolkit.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.apache.nifi.api.toolkit.model.BuildInfo;
import org.apache.nifi.api.toolkit.model.Bundle;
import org.apache.nifi.api.toolkit.model.SchedulingDefaults;
/**
 * RuntimeManifest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T13:15:23.252321740+05:30[Asia/Kolkata]")

public class RuntimeManifest {
  @JsonProperty("agentType")
  private String agentType = null;

  @JsonProperty("buildInfo")
  private BuildInfo buildInfo = null;

  @JsonProperty("bundles")
  private List<Bundle> bundles = null;

  @JsonProperty("identifier")
  private String identifier = null;

  @JsonProperty("schedulingDefaults")
  private SchedulingDefaults schedulingDefaults = null;

  @JsonProperty("version")
  private String version = null;

  public RuntimeManifest agentType(String agentType) {
    this.agentType = agentType;
    return this;
  }

   /**
   * The type of the runtime binary, e.g., &#x27;minifi-java&#x27; or &#x27;minifi-cpp&#x27;
   * @return agentType
  **/
  @Schema(description = "The type of the runtime binary, e.g., 'minifi-java' or 'minifi-cpp'")
  public String getAgentType() {
    return agentType;
  }

  public void setAgentType(String agentType) {
    this.agentType = agentType;
  }

  public RuntimeManifest buildInfo(BuildInfo buildInfo) {
    this.buildInfo = buildInfo;
    return this;
  }

   /**
   * Get buildInfo
   * @return buildInfo
  **/
  @Schema(description = "")
  public BuildInfo getBuildInfo() {
    return buildInfo;
  }

  public void setBuildInfo(BuildInfo buildInfo) {
    this.buildInfo = buildInfo;
  }

  public RuntimeManifest bundles(List<Bundle> bundles) {
    this.bundles = bundles;
    return this;
  }

  public RuntimeManifest addBundlesItem(Bundle bundlesItem) {
    if (this.bundles == null) {
      this.bundles = new ArrayList<>();
    }
    this.bundles.add(bundlesItem);
    return this;
  }

   /**
   * All extension bundles included with this runtime
   * @return bundles
  **/
  @Schema(description = "All extension bundles included with this runtime")
  public List<Bundle> getBundles() {
    return bundles;
  }

  public void setBundles(List<Bundle> bundles) {
    this.bundles = bundles;
  }

  public RuntimeManifest identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * A unique identifier for the manifest
   * @return identifier
  **/
  @Schema(description = "A unique identifier for the manifest")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public RuntimeManifest schedulingDefaults(SchedulingDefaults schedulingDefaults) {
    this.schedulingDefaults = schedulingDefaults;
    return this;
  }

   /**
   * Get schedulingDefaults
   * @return schedulingDefaults
  **/
  @Schema(description = "")
  public SchedulingDefaults getSchedulingDefaults() {
    return schedulingDefaults;
  }

  public void setSchedulingDefaults(SchedulingDefaults schedulingDefaults) {
    this.schedulingDefaults = schedulingDefaults;
  }

  public RuntimeManifest version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The version of the runtime binary, e.g., &#x27;1.0.1&#x27;
   * @return version
  **/
  @Schema(description = "The version of the runtime binary, e.g., '1.0.1'")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RuntimeManifest runtimeManifest = (RuntimeManifest) o;
    return Objects.equals(this.agentType, runtimeManifest.agentType) &&
        Objects.equals(this.buildInfo, runtimeManifest.buildInfo) &&
        Objects.equals(this.bundles, runtimeManifest.bundles) &&
        Objects.equals(this.identifier, runtimeManifest.identifier) &&
        Objects.equals(this.schedulingDefaults, runtimeManifest.schedulingDefaults) &&
        Objects.equals(this.version, runtimeManifest.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentType, buildInfo, bundles, identifier, schedulingDefaults, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuntimeManifest {\n");
    
    sb.append("    agentType: ").append(toIndentedString(agentType)).append("\n");
    sb.append("    buildInfo: ").append(toIndentedString(buildInfo)).append("\n");
    sb.append("    bundles: ").append(toIndentedString(bundles)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    schedulingDefaults: ").append(toIndentedString(schedulingDefaults)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
