<extensionManifest><groupId>org.apache.nifi</groupId><artifactId>nifi-record-serialization-services-nar</artifactId><version>2.4.0</version><parentNar><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-shared-nar</artifactId><version>2.4.0</version></parentNar><systemApiVersion>2.1.0</systemApiVersion><buildInfo><tag>HEAD</tag><branch>UNKNOWN</branch><revision>65c7732</revision></buildInfo><extensions><extension><name>org.apache.nifi.avro.AvroReader</name><type>CONTROLLER_SERVICE</type><description>Parses Avro data and returns each Avro record as an separate Record object. The Avro data may contain the schema itself, or the schema can be externalized and accessed by one of the methods offered by the 'Schema Access Strategy' property.</description><tags><tag>avro</tag><tag>parse</tag><tag>record</tag><tag>row</tag><tag>reader</tag><tag>delimited</tag><tag>comma</tag><tag>separated</tag><tag>values</tag></tags><properties><property><name>schema-access-strategy</name><displayName>Schema Access Strategy</displayName><description>Specifies how to obtain the schema that is to be used for interpreting the data.</description><defaultValue>embedded-avro-schema</defaultValue><allowableValues><allowableValue><displayName>Use 'Schema Name' Property</displayName><value>schema-name</value><description>The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.</description></allowableValue><allowableValue><displayName>Use 'Schema Text' Property</displayName><value>schema-text-property</value><description>The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.</description></allowableValue><allowableValue><displayName>Schema Reference Reader</displayName><value>schema-reference-reader</value><description>The schema reference information will be provided through a configured Schema Reference Reader service implementation.</description></allowableValue><allowableValue><displayName>Use Embedded Avro Schema</displayName><value>embedded-avro-schema</value><description>The FlowFile has the Avro Schema embedded within the content, and this schema will be used.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-registry</name><displayName>Schema Registry</displayName><description>Specifies the Controller Service to use for the Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-name</name><displayName>Schema Name</displayName><description>Specifies the name of the schema to lookup in the Schema Registry property</description><defaultValue>${schema.name}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-version</name><displayName>Schema Version</displayName><description>Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-branch</name><displayName>Schema Branch</displayName><description>Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-text</name><displayName>Schema Text</displayName><description>The text of an Avro-formatted Schema</description><defaultValue>${avro.schema}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-text-property</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-reference-reader</name><displayName>Schema Reference Reader</displayName><description>Service implementation responsible for reading FlowFile attributes or content to determine the Schema Reference Identifier</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>cache-size</name><displayName>Cache Size</displayName><description>Specifies how many Schemas should be cached</description><defaultValue>1000</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.avro.AvroRecordSetWriter</name><type>CONTROLLER_SERVICE</type><description>Writes the contents of a RecordSet in Binary Avro format.</description><tags><tag>avro</tag><tag>result</tag><tag>set</tag><tag>writer</tag><tag>serializer</tag><tag>record</tag><tag>recordset</tag><tag>row</tag></tags><properties><property><name>Schema Write Strategy</name><displayName>Schema Write Strategy</displayName><description>Specifies how the schema for a Record should be added to the data.</description><defaultValue>avro-embedded</defaultValue><allowableValues><allowableValue><displayName>Embed Avro Schema</displayName><value>avro-embedded</value><description>The FlowFile will have the Avro schema embedded into the content, as is typical with Avro</description></allowableValue><allowableValue><displayName>Do Not Write Schema</displayName><value>no-schema</value><description>Do not add any schema-related information to the FlowFile.</description></allowableValue><allowableValue><displayName>Set 'schema.name' Attribute</displayName><value>schema-name</value><description>The FlowFile will be given an attribute named 'schema.name' and this attribute will indicate the name of the schema in the Schema Registry. Note that ifthe schema for a record is not obtained from a Schema Registry, then no attribute will be added.</description></allowableValue><allowableValue><displayName>Set 'avro.schema' Attribute</displayName><value>full-schema-attribute</value><description>The FlowFile will be given an attribute named 'avro.schema' and this attribute will contain the Avro Schema that describes the records in the FlowFile. The contents of the FlowFile need not be Avro, but the text of the schema will be used.</description></allowableValue><allowableValue><displayName>Schema Reference Writer</displayName><value>schema-reference-writer</value><description>The schema reference information will be written through a configured Schema Reference Writer service implementation.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-cache</name><displayName>Schema Cache</displayName><description>Specifies a Schema Cache to add the Record Schema to so that Record Readers can quickly lookup the schema.</description><controllerServiceDefinition><className>org.apache.nifi.serialization.RecordSchemaCacheService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Schema Reference Writer</name><displayName>Schema Reference Writer</displayName><description>Service implementation responsible for writing FlowFile attributes or content header with Schema reference information</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceWriter</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>Schema Write Strategy</propertyName><propertyDisplayName>Schema Write Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-writer</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-access-strategy</name><displayName>Schema Access Strategy</displayName><description>Specifies how to obtain the schema that is to be used for interpreting the data.</description><defaultValue>inherit-record-schema</defaultValue><allowableValues><allowableValue><displayName>Inherit Record Schema</displayName><value>inherit-record-schema</value><description>The schema used to write records will be the same schema that was given to the Record when the Record was created.</description></allowableValue><allowableValue><displayName>Use 'Schema Name' Property</displayName><value>schema-name</value><description>The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.</description></allowableValue><allowableValue><displayName>Use 'Schema Text' Property</displayName><value>schema-text-property</value><description>The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-registry</name><displayName>Schema Registry</displayName><description>Specifies the Controller Service to use for the Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-name</name><displayName>Schema Name</displayName><description>Specifies the name of the schema to lookup in the Schema Registry property</description><defaultValue>${schema.name}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-version</name><displayName>Schema Version</displayName><description>Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-branch</name><displayName>Schema Branch</displayName><description>Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-text</name><displayName>Schema Text</displayName><description>The text of an Avro-formatted Schema</description><defaultValue>${avro.schema}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-text-property</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-reference-reader</name><displayName>Schema Reference Reader</displayName><description>Service implementation responsible for reading FlowFile attributes or content to determine the Schema Reference Identifier</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>compression-format</name><displayName>Compression Format</displayName><description>Compression type to use when writing Avro files. Default is None.</description><defaultValue>NONE</defaultValue><allowableValues><allowableValue><displayName>BZIP2</displayName><value>BZIP2</value><description></description></allowableValue><allowableValue><displayName>DEFLATE</displayName><value>DEFLATE</value><description></description></allowableValue><allowableValue><displayName>NONE</displayName><value>NONE</value><description></description></allowableValue><allowableValue><displayName>SNAPPY</displayName><value>SNAPPY</value><description></description></allowableValue><allowableValue><displayName>LZO</displayName><value>LZO</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cache-size</name><displayName>Cache Size</displayName><description>Specifies how many Schemas should be cached</description><defaultValue>1000</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>encoder-pool-size</name><displayName>Encoder Pool Size</displayName><description>Avro Writers require the use of an Encoder. Creation of Encoders is expensive, but once created, they can be reused. This property controls the maximum number of Encoders that can be pooled and reused. Setting this value too small can result in degraded performance, but setting it higher can result in more heap being used. This property is ignored if the Avro Writer is configured with a Schema Write Strategy of 'Embed Avro Schema'.</description><defaultValue>32</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>ENVIRONMENT</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordSetWriterFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.cef.CEFReader</name><type>CONTROLLER_SERVICE</type><description>Parses CEF (Common Event Format) events, returning each row as a record. This reader allows for inferring a schema based on the first event in the FlowFile or providing an explicit schema for interpreting the values.</description><tags><tag>cef</tag><tag>record</tag><tag>reader</tag><tag>parser</tag></tags><properties><property><name>schema-access-strategy</name><displayName>Schema Access Strategy</displayName><description>Specifies how to obtain the schema that is to be used for interpreting the data.</description><defaultValue>infer-schema</defaultValue><allowableValues><allowableValue><displayName>Use 'Schema Name' Property</displayName><value>schema-name</value><description>The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.</description></allowableValue><allowableValue><displayName>Use 'Schema Text' Property</displayName><value>schema-text-property</value><description>The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.</description></allowableValue><allowableValue><displayName>Schema Reference Reader</displayName><value>schema-reference-reader</value><description>The schema reference information will be provided through a configured Schema Reference Reader service implementation.</description></allowableValue><allowableValue><displayName>Infer Schema</displayName><value>infer-schema</value><description>The Schema of the data will be inferred automatically when the data is read. See component Usage and Additional Details for information about how the schema is inferred.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-registry</name><displayName>Schema Registry</displayName><description>Specifies the Controller Service to use for the Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-name</name><displayName>Schema Name</displayName><description>Specifies the name of the schema to lookup in the Schema Registry property</description><defaultValue>${schema.name}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-version</name><displayName>Schema Version</displayName><description>Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-branch</name><displayName>Schema Branch</displayName><description>Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-text</name><displayName>Schema Text</displayName><description>The text of an Avro-formatted Schema</description><defaultValue>${avro.schema}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-text-property</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-reference-reader</name><displayName>Schema Reference Reader</displayName><description>Service implementation responsible for reading FlowFile attributes or content to determine the Schema Reference Identifier</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>raw-message-field</name><displayName>Raw Message Field</displayName><description>If set the raw message will be added to the record using the property value as field name. This is not the same as the "rawEvent" extension field!</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>ENVIRONMENT</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>invalid-message-field</name><displayName>Invalid Field</displayName><description>Used when a line in the FlowFile cannot be parsed by the CEF parser. If set, instead of failing to process the FlowFile, a record is being added with one field. This record contains one field with the name specified by the property and the raw message as value.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>ENVIRONMENT</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>datetime-representation</name><displayName>DateTime Locale</displayName><description>The IETF BCP 47 representation of the Locale to be used when parsing date fields with long or short month names (e.g. may &lt;en-US&gt; vs. mai. &lt;fr-FR&gt;. The defaultvalue is generally safe. Only change if having issues parsing CEF messages</description><defaultValue>en-US</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>ENVIRONMENT</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>inference-strategy</name><displayName>Inference Strategy</displayName><description>Defines the set of fields should be included in the schema and the way the fields are being interpreted.</description><defaultValue>custom-extensions-inferred</defaultValue><allowableValues><allowableValue><displayName>Headers only</displayName><value>headers-only</value><description>Includes only CEF header fields into the inferred schema.</description></allowableValue><allowableValue><displayName>Headers and extensions</displayName><value>headers-and-extensions</value><description>Includes the CEF header and extension fields to the schema, but not the custom extensions.</description></allowableValue><allowableValue><displayName>With custom extensions as strings</displayName><value>custom-extensions-as-string</value><description>Includes all fields into the inferred schema, involving custom extension fields as string values.</description></allowableValue><allowableValue><displayName>With custom extensions inferred</displayName><value>custom-extensions-inferred</value><description>Includes all fields into the inferred schema, involving custom extension fields with inferred data types. The inference works based on the values in the FlowFile. In some scenarios this might result unsatisfiable behaviour. In these cases it is suggested to use "With custom extensions as strings" Inference Strategy or predefined schema.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>infer-schema</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-inference-cache</name><displayName>Schema Inference Cache</displayName><description>Specifies a Schema Cache to use when inferring the schema. If not populated, the schema will be inferred each time. However, if a cache is specified, the cache will first be consulted and if the applicable schema can be found, it will be used instead of inferring the schema.</description><controllerServiceDefinition><className>org.apache.nifi.serialization.RecordSchemaCacheService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>infer-schema</dependentValue></dependentValues></dependency></dependencies></property><property><name>accept-empty-extensions</name><displayName>Accept empty extensions</displayName><description>If set to true, empty extensions will be accepted and will be associated to a null value.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.csv.CSVReader</name><type>CONTROLLER_SERVICE</type><description>Parses CSV-formatted data, returning each row in the CSV file as a separate record. This reader allows for inferring a schema based on the first line of the CSV, if a 'header line' is present, or providing an explicit schema for interpreting the values. See Controller Service's Usage for further documentation.</description><tags><tag>csv</tag><tag>parse</tag><tag>record</tag><tag>row</tag><tag>reader</tag><tag>delimited</tag><tag>comma</tag><tag>separated</tag><tag>values</tag></tags><properties><property><name>schema-access-strategy</name><displayName>Schema Access Strategy</displayName><description>Specifies how to obtain the schema that is to be used for interpreting the data.</description><defaultValue>infer-schema</defaultValue><allowableValues><allowableValue><displayName>Use 'Schema Name' Property</displayName><value>schema-name</value><description>The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.</description></allowableValue><allowableValue><displayName>Use 'Schema Text' Property</displayName><value>schema-text-property</value><description>The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.</description></allowableValue><allowableValue><displayName>Schema Reference Reader</displayName><value>schema-reference-reader</value><description>The schema reference information will be provided through a configured Schema Reference Reader service implementation.</description></allowableValue><allowableValue><displayName>Use String Fields From Header</displayName><value>csv-header-derived</value><description>The first non-comment line of the CSV file is a header line that contains the names of the columns. The schema will be derived by using the column names in the header and assuming that all columns are of type String.</description></allowableValue><allowableValue><displayName>Infer Schema</displayName><value>infer-schema</value><description>The Schema of the data will be inferred automatically when the data is read. See component Usage and Additional Details for information about how the schema is inferred.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-registry</name><displayName>Schema Registry</displayName><description>Specifies the Controller Service to use for the Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-name</name><displayName>Schema Name</displayName><description>Specifies the name of the schema to lookup in the Schema Registry property</description><defaultValue>${schema.name}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-version</name><displayName>Schema Version</displayName><description>Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-branch</name><displayName>Schema Branch</displayName><description>Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-text</name><displayName>Schema Text</displayName><description>The text of an Avro-formatted Schema</description><defaultValue>${avro.schema}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-text-property</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-reference-reader</name><displayName>Schema Reference Reader</displayName><description>Service implementation responsible for reading FlowFile attributes or content to determine the Schema Reference Identifier</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>csv-reader-csv-parser</name><displayName>CSV Parser</displayName><description>Specifies which parser to use to read CSV records. NOTE: Different parsers may support different subsets of functionality and may also exhibit different levels of performance.</description><defaultValue>commons-csv</defaultValue><allowableValues><allowableValue><displayName>Apache Commons CSV</displayName><value>commons-csv</value><description>The CSV parser implementation from the Apache Commons CSV library.</description></allowableValue><allowableValue><displayName>Jackson CSV</displayName><value>jackson-csv</value><description>The CSV parser implementation from the Jackson Dataformats library.</description></allowableValue><allowableValue><displayName>FastCSV</displayName><value>fast-csv</value><description>The CSV parser implementation from the FastCSV library. NOTE: This parser only officially supports RFC-4180, so it recommended to set the 'CSV Format' property to 'RFC 4180'. It does handle some non-compliant CSV data, for that case set the 'CSV Format' property to 'CUSTOM' and the other custom format properties (such as 'Trim Fields', 'Trim double quote', etc.) as appropriate. Be aware that this may cause errors if FastCSV doesn't handle the property settings correctly (such as 'Ignore Header'), but otherwise may process the input as expected even if the data is not fully RFC-4180 compliant.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Date Format</name><displayName>Date Format</displayName><description>Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Time Format</name><displayName>Time Format</displayName><description>Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Timestamp Format</name><displayName>Timestamp Format</displayName><description>Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>CSV Format</name><displayName>CSV Format</displayName><description>Specifies which "format" the CSV data is in, or specifies if custom formatting should be used.</description><defaultValue>custom</defaultValue><allowableValues><allowableValue><displayName>Custom Format</displayName><value>custom</value><description>The format of the CSV is configured by using the properties of this Controller Service, such as Value Separator</description></allowableValue><allowableValue><displayName>RFC 4180</displayName><value>rfc-4180</value><description>CSV data follows the RFC 4180 Specification defined at https://tools.ietf.org/html/rfc4180</description></allowableValue><allowableValue><displayName>Microsoft Excel</displayName><value>excel</value><description>CSV data follows the format used by Microsoft Excel</description></allowableValue><allowableValue><displayName>Tab-Delimited</displayName><value>tdf</value><description>CSV data is Tab-Delimited instead of Comma Delimited</description></allowableValue><allowableValue><displayName>MySQL Format</displayName><value>mysql</value><description>CSV data follows the format used by MySQL</description></allowableValue><allowableValue><displayName>Informix Unload</displayName><value>informix-unload</value><description>The format used by Informix when issuing the UNLOAD TO file_name command</description></allowableValue><allowableValue><displayName>Informix Unload Escape Disabled</displayName><value>informix-unload-csv</value><description>The format used by Informix when issuing the UNLOAD TO file_name command with escaping disabled</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Value Separator</name><displayName>Value Separator</displayName><description>The character that is used to separate values/fields in a CSV Record. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Value Separator at runtime, then it will be skipped and the default Value Separator will be used.</description><defaultValue>,</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Record Separator</name><displayName>Record Separator</displayName><description>Specifies the characters to use in order to separate CSV Records</description><defaultValue>\n</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Skip Header Line</name><displayName>Treat First Line as Header</displayName><description>Specifies whether or not the first line of CSV should be considered a Header or should be considered a record. If the Schema Access Strategy indicates that the columns must be defined in the header, then this property will be ignored, since the header must always be present and won't be processed as a Record. Otherwise, if 'true', then the first line of CSV data will not be processed as a record and if 'false',then the first line will be interpreted as a record.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>ignore-csv-header</name><displayName>Ignore CSV Header Column Names</displayName><description>If the first line of a CSV is a header, and the configured schema does not match the fields named in the header line, this controls how the Reader will interpret the fields. If this property is true, then the field names mapped to each column are driven only by the configured schema and any fields not in the schema will be ignored. If this property is false, then the field names found in the CSV Header will be used as the names of the fields.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Quote Character</name><displayName>Quote Character</displayName><description>The character that is used to quote values so that escape characters do not have to be used. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Quote Character at runtime, then it will be skipped and the default Quote Character will be used.</description><defaultValue>"</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Escape Character</name><displayName>Escape Character</displayName><description>The character that is used to escape characters that would otherwise have a specific meaning to the CSV Parser. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Escape Character at runtime, then it will be skipped and the default Escape Character will be used. Setting it to an empty string means no escape character should be used.</description><defaultValue>\</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Comment Marker</name><displayName>Comment Marker</displayName><description>The character that is used to denote the start of a comment. Any line that begins with this comment will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Null String</name><displayName>Null String</displayName><description>Specifies a String that, if present as a value in the CSV, should be considered a null field instead of using the literal value.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Trim Fields</name><displayName>Trim Fields</displayName><description>Whether or not white space should be removed from the beginning and end of fields</description><defaultValue>true</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>csvutils-character-set</name><displayName>Character Set</displayName><description>The Character Encoding that is used to encode/decode the CSV file</description><defaultValue>UTF-8</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>csvutils-allow-duplicate-header-names</name><displayName>Allow Duplicate Header Names</displayName><description>Whether duplicate header names are allowed. Header names are case-sensitive, for example "name" and "Name" are treated as separate fields.
Handling of duplicate header names is CSV Parser specific (where applicable):
* Apache Commons CSV - duplicate headers will result in column data "shifting" right with new fields created for "unknown_field_index_X" where "X" is the CSV column index number
* Jackson CSV - duplicate headers will be de-duplicated with the field value being that of the right-most duplicate CSV column
* FastCSV - duplicate headers will be de-duplicated with the field value being that of the left-most duplicate CSV column</description><defaultValue>true</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Trim double quote</name><displayName>Trim double quote</displayName><description>Whether or not to trim starting and ending double quotes. For example: with trim string '"test"' would be parsed to 'test', without trim would be parsed to '"test"'.If set to 'false' it means full compliance with RFC-4180. Default value is true, with trim.</description><defaultValue>true</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>rfc-4180</dependentValue></dependentValues></dependency></dependencies></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.csv.CSVRecordSetWriter</name><type>CONTROLLER_SERVICE</type><description>Writes the contents of a RecordSet as CSV data. The first line written will be the column names (unless the 'Include Header Line' property is false). All subsequent lines will be the values corresponding to the record fields.</description><tags><tag>csv</tag><tag>result</tag><tag>set</tag><tag>recordset</tag><tag>record</tag><tag>writer</tag><tag>serializer</tag><tag>row</tag><tag>tsv</tag><tag>tab</tag><tag>separated</tag><tag>delimited</tag></tags><properties><property><name>Schema Write Strategy</name><displayName>Schema Write Strategy</displayName><description>Specifies how the schema for a Record should be added to the data.</description><defaultValue>no-schema</defaultValue><allowableValues><allowableValue><displayName>Do Not Write Schema</displayName><value>no-schema</value><description>Do not add any schema-related information to the FlowFile.</description></allowableValue><allowableValue><displayName>Set 'schema.name' Attribute</displayName><value>schema-name</value><description>The FlowFile will be given an attribute named 'schema.name' and this attribute will indicate the name of the schema in the Schema Registry. Note that ifthe schema for a record is not obtained from a Schema Registry, then no attribute will be added.</description></allowableValue><allowableValue><displayName>Set 'avro.schema' Attribute</displayName><value>full-schema-attribute</value><description>The FlowFile will be given an attribute named 'avro.schema' and this attribute will contain the Avro Schema that describes the records in the FlowFile. The contents of the FlowFile need not be Avro, but the text of the schema will be used.</description></allowableValue><allowableValue><displayName>Schema Reference Writer</displayName><value>schema-reference-writer</value><description>The schema reference information will be written through a configured Schema Reference Writer service implementation.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-cache</name><displayName>Schema Cache</displayName><description>Specifies a Schema Cache to add the Record Schema to so that Record Readers can quickly lookup the schema.</description><controllerServiceDefinition><className>org.apache.nifi.serialization.RecordSchemaCacheService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Schema Reference Writer</name><displayName>Schema Reference Writer</displayName><description>Service implementation responsible for writing FlowFile attributes or content header with Schema reference information</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceWriter</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>Schema Write Strategy</propertyName><propertyDisplayName>Schema Write Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-writer</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-access-strategy</name><displayName>Schema Access Strategy</displayName><description>Specifies how to obtain the schema that is to be used for interpreting the data.</description><defaultValue>inherit-record-schema</defaultValue><allowableValues><allowableValue><displayName>Inherit Record Schema</displayName><value>inherit-record-schema</value><description>The schema used to write records will be the same schema that was given to the Record when the Record was created.</description></allowableValue><allowableValue><displayName>Use 'Schema Name' Property</displayName><value>schema-name</value><description>The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.</description></allowableValue><allowableValue><displayName>Use 'Schema Text' Property</displayName><value>schema-text-property</value><description>The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-registry</name><displayName>Schema Registry</displayName><description>Specifies the Controller Service to use for the Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-name</name><displayName>Schema Name</displayName><description>Specifies the name of the schema to lookup in the Schema Registry property</description><defaultValue>${schema.name}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-version</name><displayName>Schema Version</displayName><description>Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-branch</name><displayName>Schema Branch</displayName><description>Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-text</name><displayName>Schema Text</displayName><description>The text of an Avro-formatted Schema</description><defaultValue>${avro.schema}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-text-property</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-reference-reader</name><displayName>Schema Reference Reader</displayName><description>Service implementation responsible for reading FlowFile attributes or content to determine the Schema Reference Identifier</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>Date Format</name><displayName>Date Format</displayName><description>Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Time Format</name><displayName>Time Format</displayName><description>Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Timestamp Format</name><displayName>Timestamp Format</displayName><description>Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>CSV Format</name><displayName>CSV Format</displayName><description>Specifies which "format" the CSV data is in, or specifies if custom formatting should be used.</description><defaultValue>custom</defaultValue><allowableValues><allowableValue><displayName>Custom Format</displayName><value>custom</value><description>The format of the CSV is configured by using the properties of this Controller Service, such as Value Separator</description></allowableValue><allowableValue><displayName>RFC 4180</displayName><value>rfc-4180</value><description>CSV data follows the RFC 4180 Specification defined at https://tools.ietf.org/html/rfc4180</description></allowableValue><allowableValue><displayName>Microsoft Excel</displayName><value>excel</value><description>CSV data follows the format used by Microsoft Excel</description></allowableValue><allowableValue><displayName>Tab-Delimited</displayName><value>tdf</value><description>CSV data is Tab-Delimited instead of Comma Delimited</description></allowableValue><allowableValue><displayName>MySQL Format</displayName><value>mysql</value><description>CSV data follows the format used by MySQL</description></allowableValue><allowableValue><displayName>Informix Unload</displayName><value>informix-unload</value><description>The format used by Informix when issuing the UNLOAD TO file_name command</description></allowableValue><allowableValue><displayName>Informix Unload Escape Disabled</displayName><value>informix-unload-csv</value><description>The format used by Informix when issuing the UNLOAD TO file_name command with escaping disabled</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>csv-writer</name><displayName>CSV Writer</displayName><description>Specifies which writer implementation to use to write CSV records. NOTE: Different writers may support different subsets of functionality and may also exhibit different levels of performance.</description><defaultValue>commons-csv</defaultValue><allowableValues><allowableValue><displayName>Apache Commons CSV</displayName><value>commons-csv</value><description>The CSV writer implementation from the Apache Commons CSV library.</description></allowableValue><allowableValue><displayName>FastCSV</displayName><value>fast-csv</value><description>The CSV writer implementation from the FastCSV library. NOTE: This writer only officially supports RFC-4180, so it recommended to set the 'CSV Format' property to 'RFC 4180'. It does handle some non-compliant CSV data, for that case set the 'CSV Format' property to 'CUSTOM' and the other custom format properties (such as 'Trim Fields', 'Trim double quote', etc.) as appropriate. Be aware that this may cause errors if FastCSV doesn't handle the property settings correctly (such as 'Quote Mode'), but otherwise may process the output as expected even if the data is not fully RFC-4180 compliant.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Value Separator</name><displayName>Value Separator</displayName><description>The character that is used to separate values/fields in a CSV Record. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Value Separator at runtime, then it will be skipped and the default Value Separator will be used.</description><defaultValue>,</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Include Header Line</name><displayName>Include Header Line</displayName><description>Specifies whether or not the CSV column names should be written out as the first line.</description><defaultValue>true</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Quote Character</name><displayName>Quote Character</displayName><description>The character that is used to quote values so that escape characters do not have to be used. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Quote Character at runtime, then it will be skipped and the default Quote Character will be used.</description><defaultValue>"</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Escape Character</name><displayName>Escape Character</displayName><description>The character that is used to escape characters that would otherwise have a specific meaning to the CSV Parser. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Escape Character at runtime, then it will be skipped and the default Escape Character will be used. Setting it to an empty string means no escape character should be used.</description><defaultValue>\</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Comment Marker</name><displayName>Comment Marker</displayName><description>The character that is used to denote the start of a comment. Any line that begins with this comment will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Null String</name><displayName>Null String</displayName><description>Specifies a String that, if present as a value in the CSV, should be considered a null field instead of using the literal value.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Trim Fields</name><displayName>Trim Fields</displayName><description>Whether or not white space should be removed from the beginning and end of fields</description><defaultValue>true</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Quote Mode</name><displayName>Quote Mode</displayName><description>Specifies how fields should be quoted when they are written</description><defaultValue>MINIMAL</defaultValue><allowableValues><allowableValue><displayName>Quote All Values</displayName><value>ALL</value><description>All values will be quoted using the configured quote character.</description></allowableValue><allowableValue><displayName>Quote Minimal</displayName><value>MINIMAL</value><description>Values will be quoted only if they are contain special characters such as newline characters or field separators.</description></allowableValue><allowableValue><displayName>Quote Non-Numeric Values</displayName><value>NON_NUMERIC</value><description>Values will be quoted unless the value is a number.</description></allowableValue><allowableValue><displayName>Do Not Quote Values</displayName><value>NONE</value><description>Values will not be quoted. Instead, all special characters will be escaped using the configured escape character.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Record Separator</name><displayName>Record Separator</displayName><description>Specifies the characters to use in order to separate CSV Records</description><defaultValue>\n</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>Include Trailing Delimiter</name><displayName>Include Trailing Delimiter</displayName><description>If true, a trailing delimiter will be added to each CSV Record that is written. If false, the trailing delimiter will be omitted.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>CSV Format</propertyName><propertyDisplayName>CSV Format</propertyDisplayName><dependentValues><dependentValue>custom</dependentValue></dependentValues></dependency></dependencies></property><property><name>csvutils-character-set</name><displayName>Character Set</displayName><description>The Character Encoding that is used to encode/decode the CSV file</description><defaultValue>UTF-8</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordSetWriterFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.grok.GrokReader</name><type>CONTROLLER_SERVICE</type><description>Provides a mechanism for reading unstructured text data, such as log files, and structuring the data so that it can be processed. The service is configured using Grok patterns. The service reads from a stream of data and splits each message that it finds into a separate Record, each containing the fields that are configured. If a line in the input does not match the expected message pattern, the line of text is either considered to be part of the previous message or is skipped, depending on the configuration, with the exception of stack traces. A stack trace that is found at the end of a log message is considered to be part of the previous message but is added to the 'stackTrace' field of the Record. If a record has no stack trace, it will have a NULL value for the stackTrace field (assuming that the schema does in fact include a stackTrace field of type String). Assuming that the schema includes a '_raw' field of type String, the raw message will be included in the Record.</description><tags><tag>grok</tag><tag>logs</tag><tag>logfiles</tag><tag>parse</tag><tag>unstructured</tag><tag>text</tag><tag>record</tag><tag>reader</tag><tag>regex</tag><tag>pattern</tag><tag>logstash</tag></tags><properties><property><name>schema-access-strategy</name><displayName>Schema Access Strategy</displayName><description>Specifies how to obtain the schema that is to be used for interpreting the data.</description><defaultValue>string-fields-from-grok-expression</defaultValue><allowableValues><allowableValue><displayName>Use String Fields From Grok Expression</displayName><value>string-fields-from-grok-expression</value><description>The schema will be derived using the field names present in all configured Grok Expressions. All schema fields will have a String type and will be marked as nullable. The schema will also include a `stackTrace` field, and a `_raw` field containing the input line string.</description></allowableValue><allowableValue><displayName>Use 'Schema Name' Property</displayName><value>schema-name</value><description>The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.</description></allowableValue><allowableValue><displayName>Use 'Schema Text' Property</displayName><value>schema-text-property</value><description>The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.</description></allowableValue><allowableValue><displayName>Schema Reference Reader</displayName><value>schema-reference-reader</value><description>The schema reference information will be provided through a configured Schema Reference Reader service implementation.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-registry</name><displayName>Schema Registry</displayName><description>Specifies the Controller Service to use for the Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-name</name><displayName>Schema Name</displayName><description>Specifies the name of the schema to lookup in the Schema Registry property</description><defaultValue>${schema.name}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-version</name><displayName>Schema Version</displayName><description>Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-branch</name><displayName>Schema Branch</displayName><description>Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-text</name><displayName>Schema Text</displayName><description>The text of an Avro-formatted Schema</description><defaultValue>${avro.schema}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-text-property</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-reference-reader</name><displayName>Schema Reference Reader</displayName><description>Service implementation responsible for reading FlowFile attributes or content to determine the Schema Reference Identifier</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>Grok Pattern File</name><displayName>Grok Patterns</displayName><description>Grok Patterns to use for parsing logs. If not specified, a built-in default Pattern file will be used. If specified, all patterns specified will override the default patterns. See the Controller Service's Additional Details for a list of pre-defined patterns.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>ENVIRONMENT</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><resourceDefinition><cardinality>SINGLE</cardinality><resourceTypes><resourceType>FILE</resourceType><resourceType>TEXT</resourceType><resourceType>URL</resourceType></resourceTypes></resourceDefinition></property><property><name>Grok Expression</name><displayName>Grok Expressions</displayName><description>Specifies the format of a log line in Grok format. This allows the Record Reader to understand how to parse each log line. The property supports one or more Grok expressions. The Reader attempts to parse input lines according to the configured order of the expressions.If a line in the log file does not match any expressions, the line will be assumed to belong to the previous log message.If other Grok patterns are referenced by this expression, they need to be supplied in the Grok Pattern File property.</description><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><resourceDefinition><cardinality>SINGLE</cardinality><resourceTypes><resourceType>FILE</resourceType><resourceType>TEXT</resourceType><resourceType>URL</resourceType></resourceTypes></resourceDefinition></property><property><name>no-match-behavior</name><displayName>No Match Behavior</displayName><description>If a line of text is encountered and it does not match the given Grok Expression, and it is not part of a stack trace, this property specifies how the text should be processed.</description><defaultValue>append-to-previous-message</defaultValue><allowableValues><allowableValue><displayName>Append to Previous Message</displayName><value>append-to-previous-message</value><description>The line of text that does not match the Grok Expression will be appended to the last field of the prior message.</description></allowableValue><allowableValue><displayName>Skip Line</displayName><value>skip-line</value><description>The line of text that does not match the Grok Expression will be skipped.</description></allowableValue><allowableValue><displayName>Raw Line</displayName><value>raw-line</value><description>The line of text that does not match the Grok Expression will only be added to the _raw field.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><restricted><restrictions><restriction><requiredPermission>reference remote resources</requiredPermission><explanation>Patterns and Expressions can reference resources over HTTP</explanation></restriction></restrictions></restricted><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.json.JsonPathReader</name><type>CONTROLLER_SERVICE</type><description>Parses JSON records and evaluates user-defined JSON Path's against each JSON object. While the reader expects each record to be well-formed JSON, the content of a FlowFile may consist of many records, each as a well-formed JSON array or JSON object with optional whitespace between them, such as the common 'JSON-per-line' format. If an array is encountered, each element in that array will be treated as a separate record. User-defined properties define the fields that should be extracted from the JSON in order to form the fields of a Record. Any JSON field that is not extracted via a JSONPath will not be returned in the JSON Records.</description><tags><tag>json</tag><tag>jsonpath</tag><tag>record</tag><tag>reader</tag><tag>parser</tag></tags><properties><property><name>schema-access-strategy</name><displayName>Schema Access Strategy</displayName><description>Specifies how to obtain the schema that is to be used for interpreting the data.</description><defaultValue>infer-schema</defaultValue><allowableValues><allowableValue><displayName>Use 'Schema Name' Property</displayName><value>schema-name</value><description>The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.</description></allowableValue><allowableValue><displayName>Use 'Schema Text' Property</displayName><value>schema-text-property</value><description>The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.</description></allowableValue><allowableValue><displayName>Schema Reference Reader</displayName><value>schema-reference-reader</value><description>The schema reference information will be provided through a configured Schema Reference Reader service implementation.</description></allowableValue><allowableValue><displayName>Infer Schema</displayName><value>infer-schema</value><description>The Schema of the data will be inferred automatically when the data is read. See component Usage and Additional Details for information about how the schema is inferred.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-registry</name><displayName>Schema Registry</displayName><description>Specifies the Controller Service to use for the Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-name</name><displayName>Schema Name</displayName><description>Specifies the name of the schema to lookup in the Schema Registry property</description><defaultValue>${schema.name}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-version</name><displayName>Schema Version</displayName><description>Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-branch</name><displayName>Schema Branch</displayName><description>Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-text</name><displayName>Schema Text</displayName><description>The text of an Avro-formatted Schema</description><defaultValue>${avro.schema}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-text-property</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-reference-reader</name><displayName>Schema Reference Reader</displayName><description>Service implementation responsible for reading FlowFile attributes or content to determine the Schema Reference Identifier</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>Max String Length</name><displayName>Max String Length</displayName><description>The maximum allowed length of a string value when parsing the JSON document</description><defaultValue>20 MB</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Allow Comments</name><displayName>Allow Comments</displayName><description>Whether to allow comments when parsing the JSON document</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Date Format</name><displayName>Date Format</displayName><description>Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Time Format</name><displayName>Time Format</displayName><description>Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Timestamp Format</name><displayName>Timestamp Format</displayName><description>Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties><dynamicProperty><name>The field name for the record.</name><value>A JSONPath Expression that will be evaluated against each JSON record. The result of the JSONPath will be the value of the field whose name is the same as the property name.</value><description>User-defined properties identify how to extract specific fields from a JSON object in order to create a Record</description><expressionLanguageScope>NONE</expressionLanguageScope></dynamicProperty></dynamicProperties><seeAlso><see>org.apache.nifi.json.JsonTreeReader</see></seeAlso><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.json.JsonRecordSetWriter</name><type>CONTROLLER_SERVICE</type><description>Writes the results of a RecordSet as either a JSON Array or one JSON object per line. If using Array output, then even if the RecordSet consists of a single row, it will be written as an array with a single element. If using One Line Per Object output, the JSON objects cannot be pretty-printed.</description><tags><tag>json</tag><tag>resultset</tag><tag>writer</tag><tag>serialize</tag><tag>record</tag><tag>recordset</tag><tag>row</tag></tags><properties><property><name>Schema Write Strategy</name><displayName>Schema Write Strategy</displayName><description>Specifies how the schema for a Record should be added to the data.</description><defaultValue>no-schema</defaultValue><allowableValues><allowableValue><displayName>Do Not Write Schema</displayName><value>no-schema</value><description>Do not add any schema-related information to the FlowFile.</description></allowableValue><allowableValue><displayName>Set 'schema.name' Attribute</displayName><value>schema-name</value><description>The FlowFile will be given an attribute named 'schema.name' and this attribute will indicate the name of the schema in the Schema Registry. Note that ifthe schema for a record is not obtained from a Schema Registry, then no attribute will be added.</description></allowableValue><allowableValue><displayName>Set 'avro.schema' Attribute</displayName><value>full-schema-attribute</value><description>The FlowFile will be given an attribute named 'avro.schema' and this attribute will contain the Avro Schema that describes the records in the FlowFile. The contents of the FlowFile need not be Avro, but the text of the schema will be used.</description></allowableValue><allowableValue><displayName>Schema Reference Writer</displayName><value>schema-reference-writer</value><description>The schema reference information will be written through a configured Schema Reference Writer service implementation.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-cache</name><displayName>Schema Cache</displayName><description>Specifies a Schema Cache to add the Record Schema to so that Record Readers can quickly lookup the schema.</description><controllerServiceDefinition><className>org.apache.nifi.serialization.RecordSchemaCacheService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Schema Reference Writer</name><displayName>Schema Reference Writer</displayName><description>Service implementation responsible for writing FlowFile attributes or content header with Schema reference information</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceWriter</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>Schema Write Strategy</propertyName><propertyDisplayName>Schema Write Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-writer</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-access-strategy</name><displayName>Schema Access Strategy</displayName><description>Specifies how to obtain the schema that is to be used for interpreting the data.</description><defaultValue>inherit-record-schema</defaultValue><allowableValues><allowableValue><displayName>Inherit Record Schema</displayName><value>inherit-record-schema</value><description>The schema used to write records will be the same schema that was given to the Record when the Record was created.</description></allowableValue><allowableValue><displayName>Use 'Schema Name' Property</displayName><value>schema-name</value><description>The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.</description></allowableValue><allowableValue><displayName>Use 'Schema Text' Property</displayName><value>schema-text-property</value><description>The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-registry</name><displayName>Schema Registry</displayName><description>Specifies the Controller Service to use for the Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-name</name><displayName>Schema Name</displayName><description>Specifies the name of the schema to lookup in the Schema Registry property</description><defaultValue>${schema.name}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-version</name><displayName>Schema Version</displayName><description>Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-branch</name><displayName>Schema Branch</displayName><description>Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-text</name><displayName>Schema Text</displayName><description>The text of an Avro-formatted Schema</description><defaultValue>${avro.schema}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-text-property</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-reference-reader</name><displayName>Schema Reference Reader</displayName><description>Service implementation responsible for reading FlowFile attributes or content to determine the Schema Reference Identifier</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>Date Format</name><displayName>Date Format</displayName><description>Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Time Format</name><displayName>Time Format</displayName><description>Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Timestamp Format</name><displayName>Timestamp Format</displayName><description>Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Pretty Print JSON</name><displayName>Pretty Print JSON</displayName><description>Specifies whether or not the JSON should be pretty printed</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>suppress-nulls</name><displayName>Suppress Null Values</displayName><description>Specifies how the writer should handle a null field</description><defaultValue>never-suppress</defaultValue><allowableValues><allowableValue><displayName>Never Suppress</displayName><value>never-suppress</value><description>Fields that are missing (present in the schema but not in the record), or that have a value of null, will be written out as a null value</description></allowableValue><allowableValue><displayName>Always Suppress</displayName><value>always-suppress</value><description>Fields that are missing (present in the schema but not in the record), or that have a value of null, will not be written out</description></allowableValue><allowableValue><displayName>Suppress Missing Values</displayName><value>suppress-missing</value><description>When a field has a value of null, it will be written out. However, if a field is defined in the schema and not present in the record, the field will not be written out.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Allow Scientific Notation</name><displayName>Allow Scientific Notation</displayName><description>Specifies whether or not scientific notation should be used when writing numbers</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>output-grouping</name><displayName>Output Grouping</displayName><description>Specifies how the writer should output the JSON records (as an array or one object per line, e.g.) Note that if 'One Line Per Object' is selected, then Pretty Print JSON must be false.</description><defaultValue>output-array</defaultValue><allowableValues><allowableValue><displayName>Array</displayName><value>output-array</value><description>Output records as a JSON array</description></allowableValue><allowableValue><displayName>One Line Per Object</displayName><value>output-oneline</value><description>Output records with one JSON object per line, delimited by a newline character</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>compression-format</name><displayName>Compression Format</displayName><description>The compression format to use. Valid values are: GZIP, BZIP2, ZSTD, XZ-LZMA2, LZMA, Snappy, and Snappy Framed</description><defaultValue>none</defaultValue><allowableValues><allowableValue><displayName>none</displayName><value>none</value><description></description></allowableValue><allowableValue><displayName>gzip</displayName><value>gzip</value><description></description></allowableValue><allowableValue><displayName>bzip2</displayName><value>bzip2</value><description></description></allowableValue><allowableValue><displayName>xz-lzma2</displayName><value>xz-lzma2</value><description></description></allowableValue><allowableValue><displayName>snappy</displayName><value>snappy</value><description></description></allowableValue><allowableValue><displayName>snappy framed</displayName><value>snappy framed</value><description></description></allowableValue><allowableValue><displayName>zstd</displayName><value>zstd</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>compression-level</name><displayName>Compression Level</displayName><description>The compression level to use; this is valid only when using GZIP compression. A lower value results in faster processing but less compression; a value of 0 indicates no compression but simply archiving</description><defaultValue>1</defaultValue><allowableValues><allowableValue><displayName>0</displayName><value>0</value><description></description></allowableValue><allowableValue><displayName>1</displayName><value>1</value><description></description></allowableValue><allowableValue><displayName>2</displayName><value>2</value><description></description></allowableValue><allowableValue><displayName>3</displayName><value>3</value><description></description></allowableValue><allowableValue><displayName>4</displayName><value>4</value><description></description></allowableValue><allowableValue><displayName>5</displayName><value>5</value><description></description></allowableValue><allowableValue><displayName>6</displayName><value>6</value><description></description></allowableValue><allowableValue><displayName>7</displayName><value>7</value><description></description></allowableValue><allowableValue><displayName>8</displayName><value>8</value><description></description></allowableValue><allowableValue><displayName>9</displayName><value>9</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>compression-format</propertyName><propertyDisplayName>Compression Format</propertyDisplayName><dependentValues><dependentValue>gzip</dependentValue></dependentValues></dependency></dependencies></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordSetWriterFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.json.JsonTreeReader</name><type>CONTROLLER_SERVICE</type><description>Parses JSON into individual Record objects. While the reader expects each record to be well-formed JSON, the content of a FlowFile may consist of many records, each as a well-formed JSON array or JSON object with optional whitespace between them, such as the common 'JSON-per-line' format. If an array is encountered, each element in that array will be treated as a separate record. If the schema that is configured contains a field that is not present in the JSON, a null value will be used. If the JSON contains a field that is not present in the schema, that field will be skipped. See the Usage of the Controller Service for more information and examples.</description><tags><tag>json</tag><tag>tree</tag><tag>record</tag><tag>reader</tag><tag>parser</tag></tags><properties><property><name>schema-access-strategy</name><displayName>Schema Access Strategy</displayName><description>Specifies how to obtain the schema that is to be used for interpreting the data.</description><defaultValue>infer-schema</defaultValue><allowableValues><allowableValue><displayName>Infer Schema</displayName><value>infer-schema</value><description>The Schema of the data will be inferred automatically when the data is read. See component Usage and Additional Details for information about how the schema is inferred.</description></allowableValue><allowableValue><displayName>Use 'Schema Name' Property</displayName><value>schema-name</value><description>The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.</description></allowableValue><allowableValue><displayName>Use 'Schema Text' Property</displayName><value>schema-text-property</value><description>The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.</description></allowableValue><allowableValue><displayName>Schema Reference Reader</displayName><value>schema-reference-reader</value><description>The schema reference information will be provided through a configured Schema Reference Reader service implementation.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-registry</name><displayName>Schema Registry</displayName><description>Specifies the Controller Service to use for the Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-name</name><displayName>Schema Name</displayName><description>Specifies the name of the schema to lookup in the Schema Registry property</description><defaultValue>${schema.name}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-version</name><displayName>Schema Version</displayName><description>Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-branch</name><displayName>Schema Branch</displayName><description>Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-text</name><displayName>Schema Text</displayName><description>The text of an Avro-formatted Schema</description><defaultValue>${avro.schema}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-text-property</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-reference-reader</name><displayName>Schema Reference Reader</displayName><description>Service implementation responsible for reading FlowFile attributes or content to determine the Schema Reference Identifier</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-inference-cache</name><displayName>Schema Inference Cache</displayName><description>Specifies a Schema Cache to use when inferring the schema. If not populated, the schema will be inferred each time. However, if a cache is specified, the cache will first be consulted and if the applicable schema can be found, it will be used instead of inferring the schema.</description><controllerServiceDefinition><className>org.apache.nifi.serialization.RecordSchemaCacheService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>infer-schema</dependentValue></dependentValues></dependency></dependencies></property><property><name>starting-field-strategy</name><displayName>Starting Field Strategy</displayName><description>Start processing from the root node or from a specified nested node.</description><defaultValue>ROOT_NODE</defaultValue><allowableValues><allowableValue><displayName>Root Node</displayName><value>ROOT_NODE</value><description>Begins processing from the root node.</description></allowableValue><allowableValue><displayName>Nested Field</displayName><value>NESTED_FIELD</value><description>Skips forward to the given nested JSON field (array or object) to begin processing.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>starting-field-name</name><displayName>Starting Field Name</displayName><description>Skips forward to the given nested JSON field (array or object) to begin processing.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>starting-field-strategy</propertyName><propertyDisplayName>Starting Field Strategy</propertyDisplayName><dependentValues><dependentValue>NESTED_FIELD</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-application-strategy</name><displayName>Schema Application Strategy</displayName><description>Specifies whether the schema is defined for the whole JSON or for the selected part starting from "Starting Field Name".</description><defaultValue>SELECTED_PART</defaultValue><allowableValues><allowableValue><displayName>Whole JSON</displayName><value>WHOLE_JSON</value><description>Applies the schema for the whole JSON.</description></allowableValue><allowableValue><displayName>Selected Part</displayName><value>SELECTED_PART</value><description>Applies the schema for the selected part starting from the "Starting Field Name".</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue><dependentValue>schema-text-property</dependentValue></dependentValues></dependency><dependency><propertyName>starting-field-strategy</propertyName><propertyDisplayName>Starting Field Strategy</propertyDisplayName><dependentValues><dependentValue>NESTED_FIELD</dependentValue></dependentValues></dependency></dependencies></property><property><name>Max String Length</name><displayName>Max String Length</displayName><description>The maximum allowed length of a string value when parsing the JSON document</description><defaultValue>20 MB</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Allow Comments</name><displayName>Allow Comments</displayName><description>Whether to allow comments when parsing the JSON document</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Date Format</name><displayName>Date Format</displayName><description>Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Time Format</name><displayName>Time Format</displayName><description>Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Timestamp Format</name><displayName>Timestamp Format</displayName><description>Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><seeAlso><see>org.apache.nifi.json.JsonPathReader</see></seeAlso><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.lookup.ReaderLookup</name><type>CONTROLLER_SERVICE</type><description>Provides a RecordReaderFactory that can be used to dynamically select another RecordReaderFactory. This will allow multiple RecordReaderFactories to be defined and registered, and then selected dynamically at runtime by referencing a FlowFile attribute in the Service to Use property.</description><tags><tag>lookup</tag><tag>parse</tag><tag>record</tag><tag>row</tag><tag>reader</tag></tags><properties><property><name>Service to Use</name><displayName>Service to Use</displayName><description>Specifies the name of the user-defined property whose associated Controller Service should be used.</description><defaultValue>${recordreader.name}</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties><dynamicProperty><name>Name of the RecordReader</name><value>A RecordReaderFactory controller service</value><description></description><expressionLanguageScope>NONE</expressionLanguageScope></dynamicProperty></dynamicProperties><seeAlso><see>org.apache.nifi.lookup.RecordSetWriterLookup</see></seeAlso><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.lookup.RecordSetWriterLookup</name><type>CONTROLLER_SERVICE</type><description>Provides a RecordSetWriterFactory that can be used to dynamically select another RecordSetWriterFactory. This will allow multiple RecordSetWriterFactory's to be defined and registered, and then selected dynamically at runtime by tagging FlowFiles with the attributes and referencing those attributes in the Service to Use property.</description><tags><tag>lookup</tag><tag>result</tag><tag>set</tag><tag>writer</tag><tag>serializer</tag><tag>record</tag><tag>recordset</tag><tag>row</tag></tags><properties><property><name>Service to Use</name><displayName>Service to Use</displayName><description>Specifies the name of the user-defined property whose associated Controller Service should be used.</description><defaultValue>${recordsetwriter.name}</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties><dynamicProperty><name>Name of the RecordSetWriter</name><value>A RecordSetWriterFactory controller service</value><description></description><expressionLanguageScope>NONE</expressionLanguageScope></dynamicProperty></dynamicProperties><seeAlso><see>org.apache.nifi.lookup.ReaderLookup</see></seeAlso><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordSetWriterFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.schema.inference.VolatileSchemaCache</name><type>CONTROLLER_SERVICE</type><description>Provides a Schema Cache that evicts elements based on a Least-Recently-Used algorithm. This cache is not persisted, so any restart of NiFi will result in the cache being cleared. Additionally, the cache will be cleared any time that the Controller Service is stopped and restarted.</description><tags><tag>record</tag><tag>schema</tag><tag>cache</tag></tags><properties><property><name>max-cache-size</name><displayName>Maximum Cache Size</displayName><description>The maximum number of Schemas to cache.</description><defaultValue>100</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>ENVIRONMENT</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordSchemaCacheService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.syslog.Syslog5424Reader</name><type>CONTROLLER_SERVICE</type><description>Provides a mechanism for reading RFC 5424 compliant Syslog data, such as log files, and structuring the data so that it can be processed.</description><tags><tag>syslog 5424</tag><tag>syslog</tag><tag>logs</tag><tag>logfiles</tag><tag>parse</tag><tag>text</tag><tag>record</tag><tag>reader</tag></tags><properties><property><name>Character Set</name><displayName>Character Set</displayName><description>Specifies which character set of the Syslog messages</description><defaultValue>UTF-8</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>syslog-5424-reader-raw-message</name><displayName>Raw message</displayName><description>If true, the record will have a _raw field containing the raw message</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.syslog.SyslogReader</name><type>CONTROLLER_SERVICE</type><description>Attempts to parses the contents of a Syslog message in accordance to RFC5424 and RFC3164. In the case of RFC5424 formatted messages, structured data is not supported, and will be returned as part of the message.Note: Be mindfull that RFC3164 is informational and a wide range of different implementations are present in the wild.</description><tags><tag>syslog</tag><tag>logs</tag><tag>logfiles</tag><tag>parse</tag><tag>text</tag><tag>record</tag><tag>reader</tag></tags><properties><property><name>Character Set</name><displayName>Character Set</displayName><description>Specifies which character set of the Syslog messages</description><defaultValue>UTF-8</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>syslog-5424-reader-raw-message</name><displayName>Raw message</displayName><description>If true, the record will have a _raw field containing the raw message</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.text.FreeFormTextRecordSetWriter</name><type>CONTROLLER_SERVICE</type><description>Writes the contents of a RecordSet as free-form text. The configured text is able to make use of the Expression Language to reference each of the fields that are available in a Record, as well as the attributes in the FlowFile and variables. If there is a name collision, the field name/value is used before attributes or variables. Each record in the RecordSet will be separated by a single newline character.</description><tags><tag>text</tag><tag>freeform</tag><tag>expression</tag><tag>language</tag><tag>el</tag><tag>record</tag><tag>recordset</tag><tag>resultset</tag><tag>writer</tag><tag>serialize</tag></tags><properties><property><name>Text</name><displayName>Text</displayName><description>The text to use when writing the results. This property will evaluate the Expression Language using any of the fields available in a Record.</description><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Character Set</name><displayName>Character Set</displayName><description>The Character set to use when writing the data to the FlowFile</description><defaultValue>UTF-8</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordSetWriterFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.windowsevent.WindowsEventLogReader</name><type>CONTROLLER_SERVICE</type><description>Reads Windows Event Log data as XML content having been generated by ConsumeWindowsEventLog, ParseEvtx, etc. (see Additional Details) and creates Record object(s). If the root tag of the input XML is 'Events', the child content is expected to be a series of 'Event' tags, each of which will constitute a single record. If the root tag is 'Event', the content is expected to be a single 'Event' and thus a single record. No other root tags are valid. Only events of type 'System' are currently supported.</description><tags><tag>xml</tag><tag>windows</tag><tag>event</tag><tag>log</tag><tag>record</tag><tag>reader</tag><tag>parser</tag></tags><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.xml.XMLReader</name><type>CONTROLLER_SERVICE</type><description>Reads XML content and creates Record objects. Records are expected in the second level of XML data, embedded in an enclosing root tag.</description><tags><tag>xml</tag><tag>record</tag><tag>reader</tag><tag>parser</tag></tags><properties><property><name>schema-access-strategy</name><displayName>Schema Access Strategy</displayName><description>Specifies how to obtain the schema that is to be used for interpreting the data.</description><defaultValue>infer-schema</defaultValue><allowableValues><allowableValue><displayName>Use 'Schema Name' Property</displayName><value>schema-name</value><description>The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.</description></allowableValue><allowableValue><displayName>Use 'Schema Text' Property</displayName><value>schema-text-property</value><description>The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.</description></allowableValue><allowableValue><displayName>Schema Reference Reader</displayName><value>schema-reference-reader</value><description>The schema reference information will be provided through a configured Schema Reference Reader service implementation.</description></allowableValue><allowableValue><displayName>Infer Schema</displayName><value>infer-schema</value><description>The Schema of the data will be inferred automatically when the data is read. See component Usage and Additional Details for information about how the schema is inferred.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-registry</name><displayName>Schema Registry</displayName><description>Specifies the Controller Service to use for the Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-name</name><displayName>Schema Name</displayName><description>Specifies the name of the schema to lookup in the Schema Registry property</description><defaultValue>${schema.name}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-version</name><displayName>Schema Version</displayName><description>Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-branch</name><displayName>Schema Branch</displayName><description>Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-text</name><displayName>Schema Text</displayName><description>The text of an Avro-formatted Schema</description><defaultValue>${avro.schema}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-text-property</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-reference-reader</name><displayName>Schema Reference Reader</displayName><description>Service implementation responsible for reading FlowFile attributes or content to determine the Schema Reference Identifier</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>parse_xml_attributes</name><displayName>Parse XML Attributes</displayName><description>When 'Schema Access Strategy' is 'Infer Schema' and this property is 'true' then XML attributes are parsed and added to the record as new fields. When the schema is inferred but this property is 'false', XML attributes and their values are ignored.</description><defaultValue>true</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>infer-schema</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-inference-cache</name><displayName>Schema Inference Cache</displayName><description>Specifies a Schema Cache to use when inferring the schema. If not populated, the schema will be inferred each time. However, if a cache is specified, the cache will first be consulted and if the applicable schema can be found, it will be used instead of inferring the schema.</description><controllerServiceDefinition><className>org.apache.nifi.serialization.RecordSchemaCacheService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>record_format</name><displayName>Expect Records as Array</displayName><description>This property defines whether the reader expects a FlowFile to consist of a single Record or a series of Records with a "wrapper element". Because XML does not provide for a way to read a series of XML documents from a stream directly, it is common to combine many XML documents by concatenating them and then wrapping the entire XML blob  with a "wrapper element". This property dictates whether the reader expects a FlowFile to consist of a single Record or a series of Records with a "wrapper element" that will be ignored.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>false</displayName><value>false</value><description>Each FlowFile will consist of a single record without any sort of "wrapper".</description></allowableValue><allowableValue><displayName>true</displayName><value>true</value><description>Each FlowFile will consist of zero or more records. The outer-most XML element is expected to be a "wrapper" and will be ignored.</description></allowableValue><allowableValue><displayName>Use attribute 'xml.stream.is.array'</displayName><value>${xml.stream.is.array}</value><description>Whether to treat a FlowFile as a single Record or an array of multiple Records is determined by the value of the 'xml.stream.is.array' attribute. If the value of the attribute is 'true' (case-insensitive), then the XML Reader will treat the FlowFile as a series of Records with the outer element being ignored. If the value of the attribute is 'false' (case-insensitive), then the FlowFile is treated as a single Record and no wrapper element is assumed. If the attribute is missing or its value is anything other than 'true' or 'false', then an Exception will be thrown and no records will be parsed.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>attribute_prefix</name><displayName>Attribute Prefix</displayName><description>If this property is set, the name of attributes will be prepended with a prefix when they are added to a record.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>content_field_name</name><displayName>Field Name for Content</displayName><description>If tags with content (e. g. &lt;field&gt;content&lt;/field&gt;) are defined as nested records in the schema, the name of the tag will be used as name for the record and the value of this property will be used as name for the field. If tags with content shall be parsed together with attributes (e. g. &lt;field attribute="123"&gt;content&lt;/field&gt;), they have to be defined as records. In such a case, the name of the tag will be used as the name for the record and  the value of this property will be used as the name for the field holding the original content. The name of the attribute will be used to create a new record field, the content of which will be the value of the attribute. For more information, see the 'Additional Details...' section of the XMLReader controller service's documentation.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Date Format</name><displayName>Date Format</displayName><description>Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Time Format</name><displayName>Time Format</displayName><description>Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Timestamp Format</name><displayName>Timestamp Format</displayName><description>Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.xml.XMLRecordSetWriter</name><type>CONTROLLER_SERVICE</type><description>Writes a RecordSet to XML. The records are wrapped by a root tag.</description><tags><tag>xml</tag><tag>resultset</tag><tag>writer</tag><tag>serialize</tag><tag>record</tag><tag>recordset</tag><tag>row</tag></tags><properties><property><name>Schema Write Strategy</name><displayName>Schema Write Strategy</displayName><description>Specifies how the schema for a Record should be added to the data.</description><defaultValue>no-schema</defaultValue><allowableValues><allowableValue><displayName>Do Not Write Schema</displayName><value>no-schema</value><description>Do not add any schema-related information to the FlowFile.</description></allowableValue><allowableValue><displayName>Set 'schema.name' Attribute</displayName><value>schema-name</value><description>The FlowFile will be given an attribute named 'schema.name' and this attribute will indicate the name of the schema in the Schema Registry. Note that ifthe schema for a record is not obtained from a Schema Registry, then no attribute will be added.</description></allowableValue><allowableValue><displayName>Set 'avro.schema' Attribute</displayName><value>full-schema-attribute</value><description>The FlowFile will be given an attribute named 'avro.schema' and this attribute will contain the Avro Schema that describes the records in the FlowFile. The contents of the FlowFile need not be Avro, but the text of the schema will be used.</description></allowableValue><allowableValue><displayName>Schema Reference Writer</displayName><value>schema-reference-writer</value><description>The schema reference information will be written through a configured Schema Reference Writer service implementation.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-cache</name><displayName>Schema Cache</displayName><description>Specifies a Schema Cache to add the Record Schema to so that Record Readers can quickly lookup the schema.</description><controllerServiceDefinition><className>org.apache.nifi.serialization.RecordSchemaCacheService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Schema Reference Writer</name><displayName>Schema Reference Writer</displayName><description>Service implementation responsible for writing FlowFile attributes or content header with Schema reference information</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceWriter</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>Schema Write Strategy</propertyName><propertyDisplayName>Schema Write Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-writer</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-access-strategy</name><displayName>Schema Access Strategy</displayName><description>Specifies how to obtain the schema that is to be used for interpreting the data.</description><defaultValue>inherit-record-schema</defaultValue><allowableValues><allowableValue><displayName>Inherit Record Schema</displayName><value>inherit-record-schema</value><description>The schema used to write records will be the same schema that was given to the Record when the Record was created.</description></allowableValue><allowableValue><displayName>Use 'Schema Name' Property</displayName><value>schema-name</value><description>The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.</description></allowableValue><allowableValue><displayName>Use 'Schema Text' Property</displayName><value>schema-text-property</value><description>The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-registry</name><displayName>Schema Registry</displayName><description>Specifies the Controller Service to use for the Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-name</name><displayName>Schema Name</displayName><description>Specifies the name of the schema to lookup in the Schema Registry property</description><defaultValue>${schema.name}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-version</name><displayName>Schema Version</displayName><description>Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-branch</name><displayName>Schema Branch</displayName><description>Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-text</name><displayName>Schema Text</displayName><description>The text of an Avro-formatted Schema</description><defaultValue>${avro.schema}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-text-property</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-reference-reader</name><displayName>Schema Reference Reader</displayName><description>Service implementation responsible for reading FlowFile attributes or content to determine the Schema Reference Identifier</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>Date Format</name><displayName>Date Format</displayName><description>Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Time Format</name><displayName>Time Format</displayName><description>Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Timestamp Format</name><displayName>Timestamp Format</displayName><description>Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>suppress_nulls</name><displayName>Suppress Null Values</displayName><description>Specifies how the writer should handle a null field</description><defaultValue>never-suppress</defaultValue><allowableValues><allowableValue><displayName>Never Suppress</displayName><value>never-suppress</value><description>Fields that are missing (present in the schema but not in the record), or that have a value of null, will be written out as a null value</description></allowableValue><allowableValue><displayName>Always Suppress</displayName><value>always-suppress</value><description>Fields that are missing (present in the schema but not in the record), or that have a value of null, will not be written out</description></allowableValue><allowableValue><displayName>Suppress Missing Values</displayName><value>suppress-missing</value><description>When a field has a value of null, it will be written out. However, if a field is defined in the schema and not present in the record, the field will not be written out.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>pretty_print_xml</name><displayName>Pretty Print XML</displayName><description>Specifies whether or not the XML should be pretty printed</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>omit_xml_declaration</name><displayName>Omit XML Declaration</displayName><description>Specifies whether or not to include XML declaration</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>root_tag_name</name><displayName>Name of Root Tag</displayName><description>Specifies the name of the XML root tag wrapping the record set. This property has to be defined if the writer is supposed to write multiple records in a single FlowFile.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>record_tag_name</name><displayName>Name of Record Tag</displayName><description>Specifies the name of the XML record tag wrapping the record fields. If this is not set, the writer will use the record name in the schema.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>array_wrapping</name><displayName>Wrap Elements of Arrays</displayName><description>Specifies how the writer wraps elements of fields of type array</description><defaultValue>no-wrapping</defaultValue><allowableValues><allowableValue><displayName>Use Property as Wrapper</displayName><value>use-property-as-wrapper</value><description>The value of the property "Array Tag Name" will be used as the tag name to wrap elements of an array. The field name of the array field will be used for the tag name of the elements.</description></allowableValue><allowableValue><displayName>Use Property for Elements</displayName><value>use-property-for-elements</value><description>The value of the property "Array Tag Name" will be used for the tag name of the elements of an array. The field name of the array field will be used as the tag name to wrap elements.</description></allowableValue><allowableValue><displayName>No Wrapping</displayName><value>no-wrapping</value><description>The elements of an array will not be wrapped</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>array_tag_name</name><displayName>Array Tag Name</displayName><description>Name of the tag used by property "Wrap Elements of Arrays" to write arrays</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Character Set</name><displayName>Character Set</displayName><description>The Character set to use when writing the data to the FlowFile</description><defaultValue>UTF-8</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordSetWriterFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.yaml.YamlTreeReader</name><type>CONTROLLER_SERVICE</type><description>Parses YAML into individual Record objects. While the reader expects each record to be well-formed YAML, the content of a FlowFile may consist of many records, each as a well-formed YAML array or YAML object. If an array is encountered, each element in that array will be treated as a separate record. If the schema that is configured contains a field that is not present in the YAML, a null value will be used. If the YAML contains a field that is not present in the schema, that field will be skipped. Please note this controller service does not support resolving the use of YAML aliases. Any alias present will be treated as a string. See the Usage of the Controller Service for more information and examples.</description><tags><tag>yaml</tag><tag>tree</tag><tag>record</tag><tag>reader</tag><tag>parser</tag></tags><properties><property><name>schema-access-strategy</name><displayName>Schema Access Strategy</displayName><description>Specifies how to obtain the schema that is to be used for interpreting the data.</description><defaultValue>infer-schema</defaultValue><allowableValues><allowableValue><displayName>Infer Schema</displayName><value>infer-schema</value><description>The Schema of the data will be inferred automatically when the data is read. See component Usage and Additional Details for information about how the schema is inferred.</description></allowableValue><allowableValue><displayName>Use 'Schema Name' Property</displayName><value>schema-name</value><description>The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.</description></allowableValue><allowableValue><displayName>Use 'Schema Text' Property</displayName><value>schema-text-property</value><description>The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.</description></allowableValue><allowableValue><displayName>Schema Reference Reader</displayName><value>schema-reference-reader</value><description>The schema reference information will be provided through a configured Schema Reference Reader service implementation.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>schema-registry</name><displayName>Schema Registry</displayName><description>Specifies the Controller Service to use for the Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-name</name><displayName>Schema Name</displayName><description>Specifies the name of the schema to lookup in the Schema Registry property</description><defaultValue>${schema.name}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-version</name><displayName>Schema Version</displayName><description>Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-branch</name><displayName>Schema Branch</displayName><description>Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-text</name><displayName>Schema Text</displayName><description>The text of an Avro-formatted Schema</description><defaultValue>${avro.schema}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-text-property</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-reference-reader</name><displayName>Schema Reference Reader</displayName><description>Service implementation responsible for reading FlowFile attributes or content to determine the Schema Reference Identifier</description><controllerServiceDefinition><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-reference-reader</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-inference-cache</name><displayName>Schema Inference Cache</displayName><description>Specifies a Schema Cache to use when inferring the schema. If not populated, the schema will be inferred each time. However, if a cache is specified, the cache will first be consulted and if the applicable schema can be found, it will be used instead of inferring the schema.</description><controllerServiceDefinition><className>org.apache.nifi.serialization.RecordSchemaCacheService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>infer-schema</dependentValue></dependentValues></dependency></dependencies></property><property><name>starting-field-strategy</name><displayName>Starting Field Strategy</displayName><description>Start processing from the root node or from a specified nested node.</description><defaultValue>ROOT_NODE</defaultValue><allowableValues><allowableValue><displayName>Root Node</displayName><value>ROOT_NODE</value><description>Begins processing from the root node.</description></allowableValue><allowableValue><displayName>Nested Field</displayName><value>NESTED_FIELD</value><description>Skips forward to the given nested JSON field (array or object) to begin processing.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>starting-field-name</name><displayName>Starting Field Name</displayName><description>Skips forward to the given nested JSON field (array or object) to begin processing.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>starting-field-strategy</propertyName><propertyDisplayName>Starting Field Strategy</propertyDisplayName><dependentValues><dependentValue>NESTED_FIELD</dependentValue></dependentValues></dependency></dependencies></property><property><name>schema-application-strategy</name><displayName>Schema Application Strategy</displayName><description>Specifies whether the schema is defined for the whole JSON or for the selected part starting from "Starting Field Name".</description><defaultValue>SELECTED_PART</defaultValue><allowableValues><allowableValue><displayName>Whole JSON</displayName><value>WHOLE_JSON</value><description>Applies the schema for the whole JSON.</description></allowableValue><allowableValue><displayName>Selected Part</displayName><value>SELECTED_PART</value><description>Applies the schema for the selected part starting from the "Starting Field Name".</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>schema-access-strategy</propertyName><propertyDisplayName>Schema Access Strategy</propertyDisplayName><dependentValues><dependentValue>schema-name</dependentValue><dependentValue>schema-reference-reader</dependentValue><dependentValue>schema-text-property</dependentValue></dependentValues></dependency><dependency><propertyName>starting-field-strategy</propertyName><propertyDisplayName>Starting Field Strategy</propertyDisplayName><dependentValues><dependentValue>NESTED_FIELD</dependentValue></dependentValues></dependency></dependencies></property><property><name>Max String Length</name><displayName>Max String Length</displayName><description>The maximum allowed length of a string value when parsing the JSON document</description><defaultValue>20 MB</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Allow Comments</name><displayName>Allow Comments</displayName><description>Whether to allow comments when parsing the JSON document</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Date Format</name><displayName>Date Format</displayName><description>Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Time Format</name><displayName>Time Format</displayName><description>Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Timestamp Format</name><displayName>Timestamp Format</displayName><description>Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java java.time.format.DateTimeFormatter format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><seeAlso><see>org.apache.nifi.json.JsonPathReader</see></seeAlso><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.serialization.RecordReaderFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension></extensions></extensionManifest>