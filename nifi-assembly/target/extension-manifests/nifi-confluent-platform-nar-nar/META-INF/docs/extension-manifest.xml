<extensionManifest><groupId>org.apache.nifi</groupId><artifactId>nifi-confluent-platform-nar</artifactId><version>2.4.0</version><parentNar><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-shared-nar</artifactId><version>2.4.0</version></parentNar><systemApiVersion>2.1.0</systemApiVersion><buildInfo><tag>HEAD</tag><branch>UNKNOWN</branch><revision>65c7732</revision></buildInfo><extensions><extension><name>org.apache.nifi.confluent.schemaregistry.ConfluentEncodedSchemaReferenceReader</name><type>CONTROLLER_SERVICE</type><description>Reads Schema Identifier according to Confluent encoding as a header consisting of a byte marker and an integer represented as four bytes</description><tags><tag>confluent</tag><tag>schema</tag><tag>registry</tag><tag>kafka</tag><tag>avro</tag></tags><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.schemaregistry.services.SchemaReferenceReader</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.confluent.schemaregistry.ConfluentEncodedSchemaReferenceWriter</name><type>CONTROLLER_SERVICE</type><description>Writes Schema Identifier according to Confluent encoding as a header consisting of a byte marker and an integer represented as four bytes</description><tags><tag>confluent</tag><tag>schema</tag><tag>registry</tag><tag>kafka</tag><tag>avro</tag></tags><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.schemaregistry.services.SchemaReferenceWriter</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension><extension><name>org.apache.nifi.confluent.schemaregistry.ConfluentSchemaRegistry</name><type>CONTROLLER_SERVICE</type><description>Provides a Schema Registry that interacts with the Confluent Schema Registry so that those Schemas that are stored in the Confluent Schema Registry can be used in NiFi. The Confluent Schema Registry has a notion of a "subject" for schemas, which is their terminology for a schema name. When a Schema is looked up by name by this registry, it will find a Schema in the Confluent Schema Registry with that subject.</description><tags><tag>schema</tag><tag>registry</tag><tag>confluent</tag><tag>avro</tag><tag>kafka</tag></tags><properties><property><name>url</name><displayName>Schema Registry URLs</displayName><description>A comma-separated list of URLs of the Schema Registry to interact with</description><defaultValue>http://localhost:8081</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>ENVIRONMENT</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>ssl-context</name><displayName>SSL Context Service</displayName><description>Specifies the SSL Context Service to use for interacting with the Confluent Schema Registry</description><controllerServiceDefinition><className>org.apache.nifi.ssl.SSLContextProvider</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></controllerServiceDefinition><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>timeout</name><displayName>Communications Timeout</displayName><description>Specifies how long to wait to receive data from the Schema Registry before considering the communications a failure</description><defaultValue>30 secs</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cache-size</name><displayName>Cache Size</displayName><description>Specifies how many Schemas should be cached from the Schema Registry</description><defaultValue>1000</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cache-expiration</name><displayName>Cache Expiration</displayName><description>Specifies how long a Schema that is cached should remain in the cache. Once this time period elapses, a cached version of a schema will no longer be used, and the service will have to communicate with the Schema Registry again in order to obtain the schema.</description><defaultValue>1 hour</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>authentication-type</name><displayName>Authentication Type</displayName><description>HTTP Client Authentication Type for Confluent Schema Registry</description><defaultValue>NONE</defaultValue><allowableValues><allowableValue><displayName>BASIC</displayName><value>BASIC</value><description></description></allowableValue><allowableValue><displayName>NONE</displayName><value>NONE</value><description></description></allowableValue></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>username</name><displayName>Username</displayName><description>Username for authentication to Confluent Schema Registry</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>authentication-type</propertyName><propertyDisplayName>Authentication Type</propertyDisplayName><dependentValues><dependentValue>BASIC</dependentValue></dependentValues></dependency></dependencies></property><property><name>password</name><displayName>Password</displayName><description>Password for authentication to Confluent Schema Registry</description><required>false</required><sensitive>true</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic><dependencies><dependency><propertyName>authentication-type</propertyName><propertyDisplayName>Authentication Type</propertyDisplayName><dependentValues><dependentValue>BASIC</dependentValue></dependentValues></dependency></dependencies></property></properties><dynamicProperties><dynamicProperty><name>request.header.*</name><value>String literal, may not be empty</value><description>Properties that begin with 'request.header.' are populated into a map and passed as http headers in REST requests to the Confluent Schema Registry</description><expressionLanguageScope>NONE</expressionLanguageScope></dynamicProperty></dynamicProperties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.schemaregistry.services.SchemaRegistry</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.4.0</version></providedServiceAPI></providedServiceAPIs></extension></extensions></extensionManifest>